{
  "info": {
    "_postman_id": "f73e8dad-4554-442c-aeb5-0ef0348796e5",
    "name": "EDU STACK RESTful API",
    "description": "# üöÄ Get started here\n\nThis collection guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## üîñ **How to use this collection**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these request types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT and PATCH requests.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a variable called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## üí™ Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more scripts in \"Tests\" to verify if the API works as expected and execute flows.\n    \n\n## ‚ÑπÔ∏è Resources\n\n[Building requests](https://learning.postman.com/docs/sending-requests/requests/)  \n[Authorizing requests](https://learning.postman.com/docs/sending-requests/authorization/)  \n[Using variables](https://learning.postman.com/docs/sending-requests/variables/)  \n[Managing environments](https://learning.postman.com/docs/sending-requests/managing-environments/)  \n[Writing scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "37738967"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Initialize System",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"superAdminUsername\": \"superadmin\",\n    \"superAdminEmail\": \"superadmin@example.com\",\n    \"superAdminPassword\": \"password123\",\n    \"schoolName\": \"My School\",\n    \"schoolEmail\": \"school@example.com\",\n    \"schoolAddress\": \"123 Main Street\",\n    \"schoolPhone\": [\"123-456-7890\"]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{auth_url}}/api/auth/initialize",
              "host": [
                "{{auth_url}}"
              ],
              "path": [
                "api",
                "auth",
                "initialize"
              ]
            },
            "description": "Initializes the system with a super admin and a school. This should only be called once."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"superAdminUsername\": \"superadmin\",\n    \"superAdminEmail\": \"superadmin@example.com\",\n    \"superAdminPassword\": \"password123\",\n    \"schoolName\": \"My School\",\n    \"schoolEmail\": \"school@example.com\",\n    \"schoolAddress\": \"123 Main Street\",\n    \"schoolPhone\": [\"123-456-7890\"]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/auth/initialize",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "initialize"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Account created successfully. Please check your email for verification code.\",\n    \"data\": {\n        \"superAdmin\": {\n            \"id\": \"clxkzjwxk0001l0v8h2g1g3f7\",\n            \"username\": \"superadmin\",\n            \"email\": \"superadmin@example.com\",\n            \"isSuperAdmin\": true\n        },\n        \"systemSettings\": {\n            \"id\": \"clxkzjwxk0000l0v8g1h3f7e6\",\n            \"appName\": \"My School\",\n            \"isOnboarded\": true\n        },\n        \"superAdminCreated\": true,\n        \"schoolCreated\": true\n    }\n}"
            },
            {
              "name": "Error - System Already Initialized",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"superAdminUsername\": \"superadmin\",\n    \"superAdminEmail\": \"superadmin@example.com\",\n    \"superAdminPassword\": \"password123\",\n    \"schoolName\": \"My School\",\n    \"schoolEmail\": \"school@example.com\",\n    \"schoolAddress\": \"123 Main Street\",\n    \"schoolPhone\": [\"123-456-7890\"]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/auth/initialize",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "initialize"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": false,\n    \"message\": \"System is already initialized\"\n}"
            }
          ]
        },
        {
          "name": "Verify Email OTP",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": \"clxkzjwxk0001l0v8h2g1g3f7\",\n    \"otp\": \"123456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{auth_url}}/api/auth/verify-email-otp",
              "host": [
                "{{auth_url}}"
              ],
              "path": [
                "api",
                "auth",
                "verify-email-otp"
              ]
            },
            "description": "Verifies the email OTP for a user."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"userId\": \"clxkzjwxk0001l0v8h2g1g3f7\",\n    \"otp\": \"123456\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/auth/verify-email-otp",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "verify-email-otp"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Email verified successfully\",\n    \"data\": {\n        \"userData\": {\n            \"id\": \"clxkzjwxk0001l0v8h2g1g3f7\",\n            \"email\": \"superadmin@example.com\",\n            \"username\": \"superadmin\",\n            \"isSuperAdmin\": true\n        },\n        \"userSchools\": [\n            {\n                \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n                \"role\": \"super_admin\"\n            }\n        ],\n        \"staff\": null,\n        \"student\": null,\n        \"parent\": null,\n        \"token\": \"...\"\n    }\n}"
            },
            {
              "name": "Error - Invalid OTP",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"userId\": \"clxkzjwxk0001l0v8h2g1g3f7\",\n    \"otp\": \"654321\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/auth/verify-email-otp",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "verify-email-otp"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": false,\n    \"message\": \"Invalid OTP provided.\"\n}"
            }
          ]
        },
        {
          "name": "Resend OTP",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"clxkzjwxk0001l0v8h2g1g3f7\",\n    \"type\": \"email_verification\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{auth_url}}/api/auth/resend-otp",
              "host": [
                "{{auth_url}}"
              ],
              "path": [
                "api",
                "auth",
                "resend-otp"
              ]
            },
            "description": "Resends the OTP to the user's email."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"clxkzjwxk0001l0v8h2g1g3f7\",\n    \"type\": \"email_verification\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/auth/resend-otp",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "resend-otp"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"OTP resent successfully.\"\n}"
            },
            {
              "name": "Error - Rate Limit Exceeded",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"clxkzjwxk0001l0v8h2g1g3f7\",\n    \"type\": \"email_verification\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/auth/resend-otp",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "resend-otp"
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": false,\n    \"message\": \"Too many OTP resend requests. Try again in 15 minutes.\"\n}"
            }
          ]
        },
        {
          "name": "Request Password Reset",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"superadmin@example.com\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{auth_url}}/api/auth/request-reset",
              "host": [
                "{{auth_url}}"
              ],
              "path": [
                "api",
                "auth",
                "request-reset"
              ]
            },
            "description": "Requests a password reset for a user."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"superadmin@example.com\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/auth/request-reset",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "request-reset"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"If an account with this email exists, a password reset OTP has been sent.\",\n    \"token\": \"...\"\n}"
            }
          ]
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"otp\": \"123456\",\n    \"newPassword\": \"newpassword123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{auth_url}}/api/auth/reset-password",
              "host": [
                "{{auth_url}}"
              ],
              "path": [
                "api",
                "auth",
                "reset-password"
              ]
            },
            "description": "Resets the user's password using the OTP."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"otp\": \"123456\",\n    \"newPassword\": \"newpassword123\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/auth/reset-password",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "reset-password"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Password reset successful.\"\n}"
            },
            {
              "name": "Error - Invalid OTP",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"otp\": \"654321\",\n    \"newPassword\": \"newpassword123\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/auth/reset-password",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "reset-password"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": false,\n    \"message\": \"Invalid or expired OTP.\"\n}"
            }
          ]
        },
        {
          "name": "User Sign-in",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const jsonData = JSON.parse(responseBody);",
                  "if(jsonData.success){",
                  "postman.setEnvironmentVariable(\"token\", jsonData?.data.token)",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"emailOrUsername\": \"superadmin\",\n    \"password\": \"password123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{auth_url}}/api/auth/login",
              "host": ["{{auth_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Signs in a user and returns a JWT token."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"emailOrUsername\": \"superadmin\",\n    \"password\": \"password123\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/auth/login",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "auth", "login"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"User signed in successfully\",\n    \"data\": {\n        \"userData\": {\n            \"id\": \"clxkzjwxk0001l0v8h2g1g3f7\",\n            \"email\": \"superadmin@example.com\",\n            \"username\": \"superadmin\",\n            \"isSuperAdmin\": true\n        },\n        \"userSchools\": [\n            {\n                \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n                \"role\": \"super_admin\"\n            }\n        ],\n        \"staff\": null,\n        \"student\": null,\n        \"parent\": null,\n        \"token\": \"...\"\n    }\n}"
            },
            {
              "name": "Error - Invalid Credentials",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"emailOrUsername\": \"superadmin\",\n    \"password\": \"wrongpassword\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/auth/login",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "auth", "login"]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": false,\n    \"message\": \"Invalid credentials. Password incorrect.\"\n}"
            }
          ]
        },
        {
          "name": "Staff Signup",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const jsonData = JSON.parse(responseBody);",
                  "if(jsonData.success){",
                  "postman.setEnvironmentVariable(\"token\", jsonData?.data.token)",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"staff@example.com\",\n    \"password\": \"password123\",\n    \"username\": \"newstaff\",\n    \"name\": \"New Staff\",\n    \"phone\": [\n        \"111-222-3333\"\n    ],\n    \"address\": \"456 Oak Avenue\",\n    \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n    \"role\": \"teacher\",\n    \"designation\": \"Math Teacher\",\n    \"dob\": \"1990-01-01\",\n    \"salary\": 50000,\n    \"joining_date\": \"2023-01-01\",\n    \"gender\": \"male\",\n    \"photo_url\": \"http://example.com/photo.jpg\",\n    \"isActive\": true,\n    \"qualification\": \"B.Sc. Mathematics\",\n    \"notes\": \"A new math teacher.\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{auth_url}}/api/auth/staff-signup",
              "host": ["{{auth_url}}"],
              "path": ["api", "auth", "staff-signup"]
            },
            "description": "Signs up a new staff member."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"staff@example.com\",\n    \"password\": \"password123\",\n    \"username\": \"newstaff\",\n    \"name\": \"New Staff\",\n    \"phone\": [\n        \"111-222-3333\"\n    ],\n    \"address\": \"456 Oak Avenue\",\n    \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n    \"role\": \"teacher\",\n    \"designation\": \"Math Teacher\",\n    \"dob\": \"1990-01-01\",\n    \"salary\": 50000,\n    \"joining_date\": \"2023-01-01\",\n    \"gender\": \"male\",\n    \"photo_url\": \"http://example.com/photo.jpg\",\n    \"isActive\": true,\n    \"qualification\": \"B.Sc. Mathematics\",\n    \"notes\": \"A new math teacher.\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/auth/staff-signup",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "auth", "staff-signup"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Staff created successfully\",\n    \"data\": {\n        \"userId\": \"clxkzjwyl0003l0v8g1h3f7e8\"\n    }\n}"
            },
            {
              "name": "Error - Validation Failed",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"invalid-email\",\n    \"password\": \"123\",\n    \"username\": \"ns\",\n    \"name\": \"\",\n    \"phone\": [\n        \"111-222-3333\"\n    ],\n    \"address\": \"456 Oak Avenue\",\n    \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n    \"role\": \"invalid-role\",\n    \"designation\": \"Math Teacher\",\n    \"dob\": \"1990-01-01\",\n    \"salary\": 50000,\n    \"joining_date\": \"2023-01-01\",\n    \"gender\": \"male\",\n    \"photo_url\": \"http://example.com/photo.jpg\",\n    \"isActive\": true,\n    \"qualification\": \"B.Sc. Mathematics\",\n    \"notes\": \"A new math teacher.\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/auth/staff-signup",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "auth", "staff-signup"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": false,\n    \"message\": \"Valid email is required\",\n    \"errors\": [\n        {\n            \"msg\": \"Valid email is required\",\n            \"param\": \"email\",\n            \"location\": \"body\"\n        }\n    ]\n}"
            }
          ]
        },
        {
          "name": "Student Signup",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const jsonData = JSON.parse(responseBody);",
                  "if(jsonData.success){",
                  "postman.setEnvironmentVariable(\"token\", jsonData?.data.token)",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"student@example.com\",\n    \"password\": \"password123\",\n    \"username\": \"newstudent\",\n    \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n    \"classId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n    \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n    \"name\": \"New Student\",\n    \"gender\": \"female\",\n    \"dob\": \"2010-05-20\",\n    \"phone\": \"444-555-6666\",\n    \"address\": \"789 Pine Street\",\n    \"admission_date\": \"2023-01-01\",\n    \"religion\": \"Christianity\",\n    \"blood_group\": \"A+\",\n    \"father_name\": \"Mr. Student\",\n    \"mother_name\": \"Mrs. Student\",\n    \"father_occupation\": \"Doctor\",\n    \"mother_occupation\": \"Lawyer\",\n    \"isActive\": true,\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"country\": \"USA\",\n    \"photo_url\": \"http://example.com/student.jpg\",\n    \"exist_guardian\": false,\n    \"guardian_name\": \"New Guardian\",\n    \"guardian_phone\": [\"777-888-9999\"],\n    \"guardian_email\": \"guardian@example.com\",\n    \"guardian_username\": \"newguardian\",\n    \"guardian_password\": \"password123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{auth_url}}/api/auth/student-signup",
              "host": ["{{auth_url}}"],
              "path": ["api", "auth", "student-signup"]
            },
            "description": "Signs up a new student."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"student@example.com\",\n    \"password\": \"password123\",\n    \"username\": \"newstudent\",\n    \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n    \"classId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n    \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n    \"name\": \"New Student\",\n    \"gender\": \"female\",\n    \"dob\": \"2010-05-20\",\n    \"phone\": \"444-555-6666\",\n    \"address\": \"789 Pine Street\",\n    \"admission_date\": \"2023-01-01\",\n    \"religion\": \"Christianity\",\n    \"blood_group\": \"A+\",\n    \"father_name\": \"Mr. Student\",\n    \"mother_name\": \"Mrs. Student\",\n    \"father_occupation\": \"Doctor\",\n    \"mother_occupation\": \"Lawyer\",\n    \"isActive\": true,\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"country\": \"USA\",\n    \"photo_url\": \"http://example.com/student.jpg\",\n    \"exist_guardian\": false,\n    \"guardian_name\": \"New Guardian\",\n    \"guardian_phone\": [\"777-888-9999\"],\n    \"guardian_email\": \"guardian@example.com\",\n    \"guardian_username\": \"newguardian\",\n    \"guardian_password\": \"password123\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/auth/student-signup",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "auth", "student-signup"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Student created successfully, pending admin approval.\",\n    \"data\": {\n        \"userData\": {\n            \"id\": \"clxkzjwyq0006l0v8g1h3f7eb\",\n            \"email\": \"student@example.com\",\n            \"username\": \"newstudent\",\n            \"isSuperAdmin\": false\n        },\n        \"student\": {\n            \"id\": \"clxkzjwyq0007l0v8g1h3f7ec\",\n            \"userId\": \"clxkzjwyq0006l0v8g1h3f7eb\",\n            \"name\": \"New Student\",\n            \"gender\": \"female\",\n            \"dob\": \"2010-05-20T00:00:00.000Z\",\n            \"phone\": \"444-555-6666\",\n            \"address\": \"789 Pine Street\",\n            \"admission_date\": \"2023-01-01T00:00:00.000Z\",\n            \"isActive\": false\n        }\n    }\n}"
            },
            {
              "name": "Error - Validation Failed",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"invalid-email\",\n    \"password\": \"123\",\n    \"username\": \"ns\",\n    \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n    \"classId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n    \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n    \"name\": \"\",\n    \"gender\": \"invalid-gender\",\n    \"dob\": \"invalid-date\",\n    \"phone\": \"444-555-6666\",\n    \"address\": \"789 Pine Street\",\n    \"admission_date\": \"2023-01-01\",\n    \"religion\": \"Christianity\",\n    \"blood_group\": \"A+\",\n    \"father_name\": \"Mr. Student\",\n    \"mother_name\": \"Mrs. Student\",\n    \"father_occupation\": \"Doctor\",\n    \"mother_occupation\": \"Lawyer\",\n    \"isActive\": true,\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"country\": \"USA\",\n    \"photo_url\": \"http://example.com/student.jpg\",\n    \"exist_guardian\": false,\n    \"guardian_name\": \"New Guardian\",\n    \"guardian_phone\": [\"777-888-9999\"],\n    \"guardian_email\": \"guardian@example.com\",\n    \"guardian_username\": \"newguardian\",\n    \"guardian_password\": \"password123\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/auth/student-signup",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "auth", "student-signup"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": false,\n    \"message\": \"Student email must be valid\",\n    \"errors\": [\n        {\n            \"msg\": \"Student email must be valid\",\n            \"param\": \"email\",\n            \"location\": \"body\"\n        }\n    ]\n}"
            }
          ]
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{auth_url}}/api/auth/logout",
              "host": ["{{auth_url}}"],
              "path": ["api", "auth", "logout"]
            },
            "description": "Logs out a user by invalidating the token."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/auth/logout",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "auth", "logout"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"User logged out successfully.\"\n}"
            },
            {
              "name": "Error - Invalid Token",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/auth/logout",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "auth", "logout"]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": false,\n    \"message\": \"Invalid or expired token.\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "System",
      "item": [
        {
          "name": "Check System Onboarding",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{auth_url}}/api/system/onboarding/check",
              "host": [
                "{{auth_url}}"
              ],
              "path": [
                "api",
                "system",
                "onboarding",
                "check"
              ]
            },
            "description": "Checks if the system has been onboarded. This is a public route and does not require authentication."
          },
          "response": [
            {
              "name": "Success - Not Onboarded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/system/onboarding/check",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "system",
                    "onboarding",
                    "check"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"System onboarding status checked\",\n    \"data\": {\n        \"isOnboarded\": false,\n        \"onboardedAt\": null,\n        \"appName\": \"EduStack\",\n        \"appVersion\": \"1.0.0\",\n        \"onboardingProgress\": 0,\n        \"currentStep\": 1\n    }\n}"
            },
            {
              "name": "Success - Onboarded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/system/onboarding/check",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "system",
                    "onboarding",
                    "check"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"System onboarding status checked\",\n    \"data\": {\n        \"isOnboarded\": true,\n        \"onboardedAt\": \"2023-10-27T10:00:00.000Z\",\n        \"appName\": \"My School\",\n        \"appVersion\": \"1.0.0\",\n        \"onboardingProgress\": 100,\n        \"currentStep\": 3\n    }\n}"
            }
          ]
        },
        {
          "name": "Get System Settings",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{auth_url}}/api/system/settings",
              "host": [
                "{{auth_url}}"
              ],
              "path": [
                "api",
                "system",
                "settings"
              ]
            },
            "description": "Gets the system settings. This route requires authentication and is restricted to admin roles."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/system/settings",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "system",
                    "settings"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"System settings retrieved successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwxk0000l0v8g1h3f7e6\",\n        \"appName\": \"My School\",\n        \"appVersion\": \"1.0.0\",\n        \"isOnboarded\": true,\n        \"onboardedAt\": \"2023-10-27T10:00:00.000Z\"\n    }\n}"
            }
          ]
        },
        {
          "name": "Update System Settings",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"appName\": \"My Awesome School\",\n    \"appDescription\": \"The best school in town.\",\n    \"allowRegistration\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{auth_url}}/api/system/settings",
              "host": [
                "{{auth_url}}"
              ],
              "path": [
                "api",
                "system",
                "settings"
              ]
            },
            "description": "Updates the system settings. This route requires authentication and is restricted to admin roles."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"appName\": \"My Awesome School\",\n    \"appDescription\": \"The best school in town.\",\n    \"allowRegistration\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/system/settings",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "system",
                    "settings"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"System settings updated successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwxk0000l0v8g1h3f7e6\",\n        \"appName\": \"My Awesome School\",\n        \"appVersion\": \"1.0.0\",\n        \"isOnboarded\": true,\n        \"onboardedAt\": \"2023-10-27T10:00:00.000Z\"\n    }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "School management",
      "item": [
        {
          "name": "School",
          "item": [
            {
              "name": "Create School",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"New School\",\n    \"email\": \"newschool@example.com\",\n    \"phone\": [\"555-123-4567\"],\n    \"address\": \"123 New Street\",\n    \"isActive\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/school",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "school"]
                },
                "description": "Creates a new school. Requires authentication and super admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"New School\",\n    \"email\": \"newschool@example.com\",\n    \"phone\": [\"555-123-4567\"],\n    \"address\": \"123 New Street\",\n    \"isActive\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/school",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "school"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"School created successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwxk0008l0v8g1h3f7ed\",\n        \"name\": \"New School\",\n        \"email\": \"newschool@example.com\",\n        \"phone\": [\n            \"555-123-4567\"\n        ],\n        \"address\": \"123 New Street\",\n        \"isActive\": true\n    }\n}"
                }
              ]
            },
            {
              "name": "Get User Schools",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/school",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "school"]
                },
                "description": "Gets the schools associated with the current user. Requires authentication."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/school",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "school"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Schools fetched successfully\",\n    \"data\": {\n        \"totalItems\": 1,\n        \"totalPages\": 1,\n        \"currentPage\": 1,\n        \"prevPage\": null,\n        \"nextPage\": null,\n        \"itemPerPage\": 10,\n        \"data\": [\n            {\n                \"id\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n                \"name\": \"My School\",\n                \"email\": \"school@example.com\",\n                \"phone\": [\n                    \"123-456-7890\"\n                ],\n                \"address\": \"123 Main Street\",\n                \"isActive\": true\n            }\n        ]\n    }\n}"
                }
              ]
            },
            {
              "name": "Get All Schools",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/school/all",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "school", "all"],
                  "query": [
                    {
                      "key": "name",
                      "value": "school 1",
                      "description": "School name",
                      "disabled": true
                    },
                    {
                      "key": "isActive",
                      "value": "true",
                      "description": "true or false",
                      "disabled": true
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "description": "pagination",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "data limit per page, default of 10",
                      "disabled": true
                    }
                  ]
                },
                "description": "Gets all schools. This is a public route."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/school/all",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "school", "all"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Schools fetched successfully\",\n    \"data\": {\n        \"totalItems\": 2,\n        \"totalPages\": 1,\n        \"currentPage\": 1,\n        \"prevPage\": null,\n        \"nextPage\": null,\n        \"itemPerPage\": 10,\n        \"data\": [\n            {\n                \"id\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n                \"name\": \"My School\",\n                \"email\": \"school@example.com\",\n                \"phone\": [\n                    \"123-456-7890\"\n                ],\n                \"address\": \"123 Main Street\",\n                \"isActive\": true\n            },\n            {\n                \"id\": \"clxkzjwxk0008l0v8g1h3f7ed\",\n                \"name\": \"New School\",\n                \"email\": \"newschool@example.com\",\n                \"phone\": [\n                    \"555-123-4567\"\n                ],\n                \"address\": \"123 New Street\",\n                \"isActive\": true\n            }\n        ]\n    }\n}"
                }
              ]
            },
            {
              "name": "Get School",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/school/:id",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "school", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7"
                    }
                  ]
                },
                "description": "Gets a single school by ID. Requires authentication."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/school/:id",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "school", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwxk0002l0v8g1h3f7e7"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"School fetched successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n        \"name\": \"My School\",\n        \"email\": \"school@example.com\",\n        \"phone\": [\n            \"123-456-7890\"\n        ],\n        \"address\": \"123 Main Street\",\n        \"isActive\": true\n    }\n}"
                }
              ]
            },
            {
              "name": "Update School",
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Updated School Name\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/school/:id",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "school", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7"
                    }
                  ]
                },
                "description": "Updates a school by ID. Requires authentication and super admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Updated School Name\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/school/:id",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "school", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwxk0002l0v8g1h3f7e7"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"School updated successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n        \"name\": \"Updated School Name\",\n        \"email\": \"school@example.com\",\n        \"phone\": [\n            \"123-456-7890\"\n        ],\n        \"address\": \"123 Main Street\",\n        \"isActive\": true\n    }\n}"
                }
              ]
            },
            {
              "name": "Delete School",
              "request": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/school/:id",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "school", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwxk0008l0v8g1h3f7ed"
                    }
                  ]
                },
                "description": "Deletes a school by ID. Requires authentication and super admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/school/:id",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "school", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwxk0008l0v8g1h3f7ed"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"School deleted successfully\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Session",
          "item": [
            {
              "name": "Create Session",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"2023/2024\",\n    \"start_date\": \"2023-09-01\",\n    \"end_date\": \"2024-07-31\",\n    \"isActive\": true,\n    \"terms\": [\n        {\n            \"name\": \"First Term\",\n            \"start_date\": \"2023-09-01\",\n            \"end_date\": \"2023-12-31\"\n        },\n        {\n            \"name\": \"Second Term\",\n            \"start_date\": \"2024-01-10\",\n            \"end_date\": \"2024-04-20\"\n        },\n        {\n            \"name\": \"Third Term\",\n            \"start_date\": \"2024-05-01\",\n            \"end_date\": \"2024-07-31\"\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/session",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "session"]
                },
                "description": "Creates a new session with terms. Requires super admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"2023/2024\",\n    \"start_date\": \"2023-09-01\",\n    \"end_date\": \"2024-07-31\",\n    \"isActive\": true,\n    \"terms\": [\n        {\n            \"name\": \"First Term\",\n            \"start_date\": \"2023-09-01\",\n            \"end_date\": \"2023-12-31\"\n        },\n        {\n            \"name\": \"Second Term\",\n            \"start_date\": \"2024-01-10\",\n            \"end_date\": \"2024-04-20\"\n        },\n        {\n            \"name\": \"Third Term\",\n            \"start_date\": \"2024-05-01\",\n            \"end_date\": \"2024-07-31\"\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/session",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "session"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Session and terms created successfully\",\n    \"data\": {\n        \"session\": {\n            \"id\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n            \"name\": \"2023/2024\",\n            \"start_date\": \"2023-09-01T00:00:00.000Z\",\n            \"end_date\": \"2024-07-31T00:00:00.000Z\",\n            \"isActive\": true\n        },\n        \"terms\": [\n            {\n                \"id\": \"clxkzjwxk000al0v8g1h3f7ef\",\n                \"name\": \"First Term\",\n                \"start_date\": \"2023-09-01T00:00:00.000Z\",\n                \"end_date\": \"2023-12-31T00:00:00.000Z\",\n                \"isActive\": false\n            },\n            {\n                \"id\": \"clxkzjwxk000bl0v8g1h3f7eg\",\n                \"name\": \"Second Term\",\n                \"start_date\": \"2024-01-10T00:00:00.000Z\",\n                \"end_date\": \"2024-04-20T00:00:00.000Z\",\n                \"isActive\": false\n            },\n            {\n                \"id\": \"clxkzjwxk000cl0v8g1h3f7eh\",\n                \"name\": \"Third Term\",\n                \"start_date\": \"2024-05-01T00:00:00.000Z\",\n                \"end_date\": \"2024-07-31T00:00:00.000Z\",\n                \"isActive\": false\n            }\n        ]\n    }\n}"
                }
              ]
            },
            {
              "name": "Update Session",
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"2023/2024 (Updated)\",\n    \"isActive\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/session/:id",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "session", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwxk0009l0v8g1h3f7ee"
                    }
                  ]
                },
                "description": "Updates a session with its terms. Requires super admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"2023/2024 (Updated)\",\n    \"isActive\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/session/:id",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "session", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwxk0009l0v8g1h3f7ee"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Session and terms updated successfully\",\n    \"data\": {\n        \"session\": {\n            \"id\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n            \"name\": \"2023/2024 (Updated)\",\n            \"start_date\": \"2023-09-01T00:00:00.000Z\",\n            \"end_date\": \"2024-07-31T00:00:00.000Z\",\n            \"isActive\": false\n        },\n        \"terms\": [\n            {\n                \"id\": \"clxkzjwxk000al0v8g1h3f7ef\",\n                \"name\": \"First Term\",\n                \"start_date\": \"2023-09-01T00:00:00.000Z\",\n                \"end_date\": \"2023-12-31T00:00:00.000Z\",\n                \"isActive\": false\n            },\n            {\n                \"id\": \"clxkzjwxk000bl0v8g1h3f7eg\",\n                \"name\": \"Second Term\",\n                \"start_date\": \"2024-01-10T00:00:00.000Z\",\n                \"end_date\": \"2024-04-20T00:00:00.000Z\",\n                \"isActive\": false\n            },\n            {\n                \"id\": \"clxkzjwxk000cl0v8g1h3f7eh\",\n                \"name\": \"Third Term\",\n                \"start_date\": \"2024-05-01T00:00:00.000Z\",\n                \"end_date\": \"2024-07-31T00:00:00.000Z\",\n                \"isActive\": false\n            }\n        ]\n    }\n}"
                }
              ]
            },
            {
              "name": "Get Active Session",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/session",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "session"]
                },
                "description": "Gets the current active session. Public."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/session",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "session"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Active session retrieved successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n        \"name\": \"2023/2024\",\n        \"start_date\": \"2023-09-01T00:00:00.000Z\",\n        \"end_date\": \"2024-07-31T00:00:00.000Z\",\n        \"isActive\": true,\n        \"terms\": [\n            {\n                \"id\": \"clxkzjwxk000al0v8g1h3f7ef\",\n                \"name\": \"First Term\",\n                \"start_date\": \"2023-09-01T00:00:00.000Z\",\n                \"end_date\": \"2023-12-31T00:00:00.000Z\",\n                \"isActive\": false\n            },\n            {\n                \"id\": \"clxkzjwxk000bl0v8g1h3f7eg\",\n                \"name\": \"Second Term\",\n                \"start_date\": \"2024-01-10T00:00:00.000Z\",\n                \"end_date\": \"2024-04-20T00:00:00.000Z\",\n                \"isActive\": false\n            },\n            {\n                \"id\": \"clxkzjwxk000cl0v8g1h3f7eh\",\n                \"name\": \"Third Term\",\n                \"start_date\": \"2024-05-01T00:00:00.000Z\",\n                \"end_date\": \"2024-07-31T00:00:00.000Z\",\n                \"isActive\": false\n            }\n        ]\n    }\n}"
                }
              ]
            },
            {
              "name": "Get All Sessions",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/session/all",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "session", "all"]
                },
                "description": "Gets all sessions. Public."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/session/all",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "session", "all"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"All sessions retrieved successfully\",\n    \"data\": [\n        {\n            \"id\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n            \"name\": \"2023/2024\",\n            \"start_date\": \"2023-09-01T00:00:00.000Z\",\n            \"end_date\": \"2024-07-31T00:00:00.000Z\",\n            \"isActive\": true,\n            \"terms\": [\n                {\n                    \"id\": \"clxkzjwxk000al0v8g1h3f7ef\",\n                    \"name\": \"First Term\",\n                    \"start_date\": \"2023-09-01T00:00:00.000Z\",\n                    \"end_date\": \"2023-12-31T00:00:00.000Z\",\n                    \"isActive\": false\n                },\n                {\n                    \"id\": \"clxkzjwxk000bl0v8g1h3f7eg\",\n                    \"name\": \"Second Term\",\n                    \"start_date\": \"2024-01-10T00:00:00.000Z\",\n                    \"end_date\": \"2024-04-20T00:00:00.000Z\",\n                    \"isActive\": false\n                },\n                {\n                    \"id\": \"clxkzjwxk000cl0v8g1h3f7eh\",\n                    \"name\": \"Third Term\",\n                    \"start_date\": \"2024-05-01T00:00:00.000Z\",\n                    \"end_date\": \"2024-07-31T00:00:00.000Z\",\n                    \"isActive\": false\n                }\n            ]\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Get Session",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/session/:id",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "session", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwxk0009l0v8g1h3f7ee"
                    }
                  ]
                },
                "description": "Gets a specific session by ID. Public."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/session/:id",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "session", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwxk0009l0v8g1h3f7ee"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Session retrieved successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n        \"name\": \"2023/2024\",\n        \"start_date\": \"2023-09-01T00:00:00.000Z\",\n        \"end_date\": \"2024-07-31T00:00:00.000Z\",\n        \"isActive\": true,\n        \"terms\": [\n            {\n                \"id\": \"clxkzjwxk000al0v8g1h3f7ef\",\n                \"name\": \"First Term\",\n                \"start_date\": \"2023-09-01T00:00:00.000Z\",\n                \"end_date\": \"2023-12-31T00:00:00.000Z\",\n                \"isActive\": false\n            },\n            {\n                \"id\": \"clxkzjwxk000bl0v8g1h3f7eg\",\n                \"name\": \"Second Term\",\n                \"start_date\": \"2024-01-10T00:00:00.000Z\",\n                \"end_date\": \"2024-04-20T00:00:00.000Z\",\n                \"isActive\": false\n            },\n            {\n                \"id\": \"clxkzjwxk000cl0v8g1h3f7eh\",\n                \"name\": \"Third Term\",\n                \"start_date\": \"2024-05-01T00:00:00.000Z\",\n                \"end_date\": \"2024-07-31T00:00:00.000Z\",\n                \"isActive\": false\n            }\n        ]\n    }\n}"
                }
              ]
            },
            {
              "name": "Delete Session",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/session/:id",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "session", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwxk0009l0v8g1h3f7ee"
                    }
                  ]
                },
                "description": "Deletes a session by ID. Requires super admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/session/:id",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "session", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwxk0009l0v8g1h3f7ee"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Session and associated terms deleted successfully\"\n}"
                }
              ]
            },
            {
              "name": "Get Session Terms",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/session/:sessionId/terms",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "session", ":sessionId", "terms"],
                  "variable": [
                    {
                      "key": "sessionId",
                      "value": "clxkzjwxk0009l0v8g1h3f7ee"
                    }
                  ]
                },
                "description": "Gets all terms for a specific session. Public."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/session/:sessionId/terms",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "session", ":sessionId", "terms"],
                      "variable": [
                        {
                          "key": "sessionId",
                          "value": "clxkzjwxk0009l0v8g1h3f7ee"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Session terms retrieved successfully.\",\n    \"data\": {\n        \"totalItems\": 3,\n        \"totalPages\": 1,\n        \"currentPage\": 1,\n        \"prevPage\": null,\n        \"nextPage\": null,\n        \"itemPerPage\": 10,\n        \"data\": [\n            {\n                \"id\": \"clxkzjwxk000al0v8g1h3f7ef\",\n                \"name\": \"First Term\",\n                \"start_date\": \"2023-09-01T00:00:00.000Z\",\n                \"end_date\": \"2023-12-31T00:00:00.000Z\",\n                \"isActive\": false\n            },\n            {\n                \"id\": \"clxkzjwxk000bl0v8g1h3f7eg\",\n                \"name\": \"Second Term\",\n                \"start_date\": \"2024-01-10T00:00:00.000Z\",\n                \"end_date\": \"2024-04-20T00:00:00.000Z\",\n                \"isActive\": false\n            },\n            {\n                \"id\": \"clxkzjwxk000cl0v8g1h3f7eh\",\n                \"name\": \"Third Term\",\n                \"start_date\": \"2024-05-01T00:00:00.000Z\",\n                \"end_date\": \"2024-07-31T00:00:00.000Z\",\n                \"isActive\": false\n            }\n        ]\n    }\n}"
                }
              ]
            },
            {
              "name": "Get Term",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/session/term/:id",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "session", "term", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwxk000al0v8g1h3f7ef"
                    }
                  ]
                },
                "description": "Gets a specific term by ID. Public."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/session/term/:id",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "session", "term", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwxk000al0v8g1h3f7ef"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Term retrieved successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwxk000al0v8g1h3f7ef\",\n        \"name\": \"First Term\",\n        \"start_date\": \"2023-09-01T00:00:00.000Z\",\n        \"end_date\": \"2023-12-31T00:00:00.000Z\",\n        \"isActive\": false\n    }\n}"
                }
              ]
            },
            {
              "name": "Delete Term",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/session/term/:id",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "session",
                    "term",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwxk000al0v8g1h3f7ef"
                    }
                  ]
                },
                "description": "Deletes a term by ID. Requires super admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/session/term/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "session",
                        "term",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwxk000al0v8g1h3f7ef"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Term deleted successfully\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Class",
          "item": [
            {
              "name": "Create Class",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Grade 1\",\n    \"section\": \"A,B,C\",\n    \"schoolId\": [\"clxkzjwxk0002l0v8g1h3f7e7\"]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/class",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "class"]
                },
                "description": "Creates a new class. Requires admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Grade 1\",\n    \"section\": \"A,B,C\",\n    \"schoolId\": [\"clxkzjwxk0002l0v8g1h3f7e7\"]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/class",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "class"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Class(es) created successfully.\",\n    \"data\": [\n        {\n            \"id\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n            \"name\": \"Grade 1\",\n            \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\"\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Get All Classes",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/class",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "class"],
                  "query": [
                    {
                      "key": "schoolId",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7",
                      "disabled": true
                    },
                    {
                      "key": "search",
                      "value": "Grade",
                      "disabled": true
                    }
                  ]
                },
                "description": "Gets all classes."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/class",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "class"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"All classes retrieved successfully\",\n    \"data\": [\n        {\n            \"id\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n            \"name\": \"Grade 1\",\n            \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n            \"sections\": [\n                {\n                    \"id\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n                    \"name\": \"A\"\n                },\n                {\n                    \"id\": \"clxkzjwyl0006l0v8g1h3f7eb\",\n                    \"name\": \"B\"\n                },\n                {\n                    \"id\": \"clxkzjwyl0007l0v8g1h3f7ec\",\n                    \"name\": \"C\"\n                }\n            ]\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Get Class",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/class/:id",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "class", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwyl0004l0v8g1h3f7e9"
                    }
                  ]
                },
                "description": "Gets a single class by ID."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/class/:id",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "class", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwyl0004l0v8g1h3f7e9"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Class retrieved successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n        \"name\": \"Grade 1\",\n        \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n        \"sections\": [\n            {\n                \"id\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n                \"name\": \"A\"\n            },\n            {\n                \"id\": \"clxkzjwyl0006l0v8g1h3f7eb\",\n                \"name\": \"B\"\n            },\n            {\n                \"id\": \"clxkzjwyl0007l0v8g1h3f7ec\",\n                \"name\": \"C\"\n            }\n        ]\n    }\n}"
                }
              ]
            },
            {
              "name": "Update Class",
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Grade 1 (Updated)\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/class/:id",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "class", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwyl0004l0v8g1h3f7e9"
                    }
                  ]
                },
                "description": "Updates a class by ID. Requires admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Grade 1 (Updated)\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/class/:id",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "class", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwyl0004l0v8g1h3f7e9"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Class updated successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n        \"name\": \"Grade 1 (Updated)\",\n        \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\"\n    }\n}"
                }
              ]
            },
            {
              "name": "Delete Class",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/class/:id",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "class", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwyl0004l0v8g1h3f7e9"
                    }
                  ]
                },
                "description": "Deletes a class by ID. Requires admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/class/:id",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "class", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwyl0004l0v8g1h3f7e9"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Class deleted successfully\"\n}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Student  Management",
      "item": [
        {
          "name": "Register Student",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"student2@example.com\",\n    \"password\": \"password123\",\n    \"username\": \"newstudent2\",\n    \"classId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n    \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n    \"name\": \"New Student 2\",\n    \"gender\": \"male\",\n    \"dob\": \"2011-01-01\",\n    \"phone\": \"123-456-7890\",\n    \"address\": \"123 Main St\",\n    \"admission_date\": \"2023-09-01\",\n    \"religion\": \"None\",\n    \"exist_guardian\": false,\n    \"guardian_name\": \"Guardian Name\",\n    \"guardian_phone\": [\"987-654-3210\"],\n    \"guardian_email\": \"guardian2@example.com\",\n    \"guardian_username\": \"guardian2\",\n    \"guardian_password\": \"password123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{auth_url}}/api/students/register/:schoolId",
              "host": [
                "{{auth_url}}"
              ],
              "path": [
                "api",
                "students",
                "register",
                ":schoolId"
              ],
              "variable": [
                {
                  "key": "schoolId",
                  "value": "clxkzjwxk0002l0v8g1h3f7e7"
                }
              ]
            },
            "description": "Registers a new student. Requires admin role."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"student2@example.com\",\n    \"password\": \"password123\",\n    \"username\": \"newstudent2\",\n    \"classId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n    \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n    \"name\": \"New Student 2\",\n    \"gender\": \"male\",\n    \"dob\": \"2011-01-01\",\n    \"phone\": \"123-456-7890\",\n    \"address\": \"123 Main St\",\n    \"admission_date\": \"2023-09-01\",\n    \"religion\": \"None\",\n    \"exist_guardian\": false,\n    \"guardian_name\": \"Guardian Name\",\n    \"guardian_phone\": [\"987-654-3210\"],\n    \"guardian_email\": \"guardian2@example.com\",\n    \"guardian_username\": \"guardian2\",\n    \"guardian_password\": \"password123\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/students/register/:schoolId",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "students",
                    "register",
                    ":schoolId"
                  ],
                  "variable": [
                    {
                      "key": "schoolId",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7"
                    }
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Student created successfully, pending admin approval.\",\n    \"data\": {\n        \"userData\": {\n            \"id\": \"clxkzjwyz0009l0v8g1h3f7ee\",\n            \"email\": \"student2@example.com\",\n            \"username\": \"newstudent2\",\n            \"isSuperAdmin\": false\n        },\n        \"student\": {\n            \"id\": \"clxkzjwz0000al0v8g1h3f7ef\",\n            \"userId\": \"clxkzjwyz0009l0v8g1h3f7ee\",\n            \"name\": \"New Student 2\",\n            \"gender\": \"male\",\n            \"dob\": \"2011-01-01T00:00:00.000Z\",\n            \"phone\": \"123-456-7890\",\n            \"address\": \"123 Main St\",\n            \"admission_date\": \"2023-09-01T00:00:00.000Z\",\n            \"isActive\": false\n        }\n    }\n}"
            }
          ]
        },
        {
          "name": "Promote Student",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"studentId\": [\"clxkzjwz0000al0v8g1h3f7ef\"],\n    \"fromClassId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n    \"toClassId\": \"clxkzjwz0000bl0v8g1h3f7eg\",\n    \"sectionId\": \"clxkzjwz0000cl0v8g1h3f7eh\",\n    \"promoteSessionId\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n    \"promoteTermId\": \"clxkzjwxk000al0v8g1h3f7ef\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{auth_url}}/api/students/promote",
              "host": ["{{auth_url}}"],
              "path": ["api", "students", "promote"]
            },
            "description": "Promotes a student. Requires teacher role."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"studentId\": [\"clxkzjwz0000al0v8g1h3f7ef\"],\n    \"fromClassId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n    \"toClassId\": \"clxkzjwz0000bl0v8g1h3f7eg\",\n    \"sectionId\": \"clxkzjwz0000cl0v8g1h3f7eh\",\n    \"promoteSessionId\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n    \"promoteTermId\": \"clxkzjwxk000al0v8g1h3f7ef\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/students/promote",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "students", "promote"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Students promoted successfully\"\n}"
            }
          ]
        },
        {
          "name": "Transfer Student",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"studentId\": [\"clxkzjwz0000al0v8g1h3f7ef\"],\n    \"toSchoolId\": \"clxkzjwxk0008l0v8g1h3f7ed\",\n    \"toClassId\": \"clxkzjwz0000dl0v8g1h3f7eg\",\n    \"toSectionId\": \"clxkzjwz0000el0v8g1h3f7eh\",\n    \"transferReason\": \"Moving to a new city\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{auth_url}}/api/students/transfer",
              "host": ["{{auth_url}}"],
              "path": ["api", "students", "transfer"]
            },
            "description": "Transfers a student. Requires admin role."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"studentId\": [\"clxkzjwz0000al0v8g1h3f7ef\"],\n    \"toSchoolId\": \"clxkzjwxk0008l0v8g1h3f7ed\",\n    \"toClassId\": \"clxkzjwz0000dl0v8g1h3f7eg\",\n    \"toSectionId\": \"clxkzjwz0000el0v8g1h3f7eh\",\n    \"transferReason\": \"Moving to a new city\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/students/transfer",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "students", "transfer"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"1 student(s) transferred successfully\"\n}"
            }
          ]
        },
        {
          "name": "Get Students By School",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{auth_url}}/api/students/:schoolId/all",
              "host": ["{{auth_url}}"],
              "path": ["api", "students", ":schoolId", "all"],
              "query": [
                {
                  "key": "admissionNumber",
                  "value": "123",
                  "disabled": true
                },
                {
                  "key": "name",
                  "value": "New",
                  "disabled": true
                },
                {
                  "key": "sectionId",
                  "value": "clxkzjwyl0005l0v8g1h3f7ea",
                  "disabled": true
                },
                {
                  "key": "active",
                  "value": "true",
                  "description": "true / false, active of non active student",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "schoolId",
                  "value": "clxkzjwxk0002l0v8g1h3f7e7"
                }
              ]
            },
            "description": "Gets students by school. Requires teacher role."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/students/:schoolId/all",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "students", ":schoolId", "all"],
                  "variable": [
                    {
                      "key": "schoolId",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Students fetched successfully.\",\n    \"data\": {\n        \"totalItems\": 1,\n        \"totalPages\": 1,\n        \"currentPage\": 1,\n        \"prevPage\": null,\n        \"nextPage\": null,\n        \"itemPerPage\": 10,\n        \"data\": [\n            {\n                \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n                \"name\": \"New Student 2\",\n                \"admissionNumber\": 1,\n                \"email\": \"student2@example.com\",\n                \"username\": \"newstudent2\",\n                \"gender\": \"male\",\n                \"dob\": \"2011-01-01T00:00:00.000Z\",\n                \"phone\": \"123-456-7890\",\n                \"address\": \"123 Main St\",\n                \"admissionDate\": \"2023-09-01T00:00:00.000Z\",\n                \"religion\": \"None\",\n                \"isActive\": false,\n                \"parent\": {\n                    \"name\": \"Guardian Name\",\n                    \"email\": \"guardian2@example.com\",\n                    \"phone\": \"987-654-3210\"\n                }\n            }\n        ]\n    }\n}"
            }
          ]
        },
        {
          "name": "Get Student Details",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{auth_url}}/api/students/:studentId",
              "host": ["{{auth_url}}"],
              "path": ["api", "students", ":studentId"],
              "variable": [
                {
                  "key": "studentId",
                  "value": "clxkzjwz0000al0v8g1h3f7ef"
                }
              ]
            },
            "description": "Gets student details. Requires teacher role."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/students/:studentId",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "students", ":studentId"],
                  "variable": [
                    {
                      "key": "studentId",
                      "value": "clxkzjwz0000al0v8g1h3f7ef"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Student details fetched successfully\",\n    \"data\": {\n        \"student\": {\n            \"id\": \"clxkzjwz0000al0v8g1h3f7ef\",\n            \"admission_number\": 1,\n            \"name\": \"New Student 2\",\n            \"gender\": \"male\",\n            \"dob\": \"2011-01-01T00:00:00.000Z\",\n            \"phone\": \"123-456-7890\",\n            \"address\": \"123 Main St\",\n            \"admission_date\": \"2023-09-01T00:00:00.000Z\",\n            \"religion\": \"None\",\n            \"isActive\": false,\n            \"user\": {\n                \"email\": \"student2@example.com\",\n                \"username\": \"newstudent2\"\n            },\n            \"parent\": {\n                \"name\": \"Guardian Name\",\n                \"email\": \"guardian2@example.com\",\n                \"phone\": \"987-654-3210\"\n            }\n        },\n        \"enrollments\": [\n            {\n                \"class\": \"Grade 1\",\n                \"section\": \"A\"\n            }\n        ]\n    }\n}"
            }
          ]
        },
        {
          "name": "Update Student",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"New Student 2 (Updated)\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{auth_url}}/api/students/:studentId",
              "host": [
                "{{auth_url}}"
              ],
              "path": [
                "api",
                "students",
                ":studentId"
              ],
              "variable": [
                {
                  "key": "studentId",
                  "value": "clxkzjwz0000al0v8g1h3f7ef"
                }
              ]
            },
            "description": "Updates a student. Requires admin role."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"New Student 2 (Updated)\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/students/:studentId",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "students",
                    ":studentId"
                  ],
                  "variable": [
                    {
                      "key": "studentId",
                      "value": "clxkzjwz0000al0v8g1h3f7ef"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Student updated successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz0000al0v8g1h3f7ef\",\n        \"name\": \"New Student 2 (Updated)\",\n        \"gender\": \"male\",\n        \"dob\": \"2011-01-01T00:00:00.000Z\",\n        \"phone\": \"123-456-7890\",\n        \"address\": \"123 Main St\",\n        \"admission_date\": \"2023-09-01T00:00:00.000Z\",\n        \"isActive\": false\n    }\n}"
            }
          ]
        },
        {
          "name": "Get Transfer Students By School",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{auth_url}}/api/students/:schoolId/transfer",
              "host": ["{{auth_url}}"],
              "path": ["api", "students", ":schoolId", "transfer"],
              "query": [
                {
                  "key": "fromSchoolId",
                  "value": "cm5welfw90000exhk7omzwhij",
                  "disabled": true
                },
                {
                  "key": "toSchoolId",
                  "value": "cm5welfw90000exhk7omzwhij",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "schoolId",
                  "value": "cm5welfw90000exhk7omzwhij"
                }
              ]
            }
          },
          "response": [
            {
              "name": "Get Transfer Students By School",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/students/:schoolId/transfer",
                  "host": ["{{auth_url}}"],
                  "path": ["students", ":schoolId", "transfer"],
                  "query": [
                    {
                      "key": "fromSchoolId",
                      "value": "cm5welfw90000exhk7omzwhij",
                      "disabled": true
                    },
                    {
                      "key": "toSchoolId",
                      "value": "cm5welfw90000exhk7omzwhij",
                      "disabled": true
                    }
                  ],
                  "variable": [
                    {
                      "key": "schoolId",
                      "value": "cm5zcpxvv0004ex8ksm1v2uwu"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "X-Powered-By",
                  "value": "Express"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "101"
                },
                {
                  "key": "ETag",
                  "value": "W/\"65-n1xSsuv/5jGqjwCy4Hn9MTbdEKw\""
                },
                {
                  "key": "Date",
                  "value": "Sun, 09 Mar 2025 12:35:32 GMT"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=5"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Transfer students fetched successfully\",\n    \"data\": {\n        \"transfers\": [],\n        \"total\": 0\n    }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Notification & Mail",
      "item": [
        {
          "name": "Send Bulk Messages",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"recipients\": {\n        \"studentIds\": [\"clxkzjwz0000al0v8g1h3f7ef\"],\n        \"staffIds\": [\"clxkzjwyl0003l0v8g1h3f7e8\"]\n    },\n    \"title\": \"Important Announcement\",\n    \"message\": \"This is an important announcement for all students and staff.\",\n    \"category\": \"ANNOUNCEMENT\",\n    \"channels\": [\"EMAIL\", \"IN_APP\"]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{auth_url}}/api/notify",
              "host": ["{{auth_url}}"],
              "path": ["api", "notify"]
            },
            "description": "Sends or schedules bulk notifications. Requires admin role."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"recipients\": {\n        \"studentIds\": [\"clxkzjwz0000al0v8g1h3f7ef\"],\n        \"staffIds\": [\"clxkzjwyl0003l0v8g1h3f7e8\"]\n    },\n    \"title\": \"Important Announcement\",\n    \"message\": \"This is an important announcement for all students and staff.\",\n    \"category\": \"ANNOUNCEMENT\",\n    \"channels\": [\"EMAIL\", \"IN_APP\"]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/notify",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "notify"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Messages sent successfully!\"\n}"
            }
          ]
        },
        {
          "name": "Get User Notifications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{auth_url}}/api/notify?category=ANNOUNCEMENT",
              "host": ["{{auth_url}}"],
              "path": ["api", "notify"],
              "query": [
                {
                  "key": "category",
                  "value": "ANNOUNCEMENT",
                  "description": "GENERAL, ACADEMIC, ATTENDANCE, DISCIPLINE, EXAM, FEES, EVENTS, ANNOUNCEMENT"
                },
                {
                  "key": "status",
                  "value": "unread",
                  "description": "read or unread",
                  "disabled": true
                },
                {
                  "key": "startDate",
                  "value": "2025-04-05T00:00:00Z",
                  "disabled": true
                },
                {
                  "key": "endDate",
                  "value": "2025-04-05T23:59:59Z",
                  "disabled": true
                }
              ]
            },
            "description": "Fetches notifications for a user. Requires authentication."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/notify?category=ANNOUNCEMENT",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "notify"],
                  "query": [
                    {
                      "key": "category",
                      "value": "ANNOUNCEMENT"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Notifications fetched successfully\",\n    \"data\": [\n        {\n            \"id\": \"clxkzjwz1000gl0v8g1h3f7ek\",\n            \"userId\": \"clxkzjwyz0009l0v8g1h3f7ee\",\n            \"title\": \"Important Announcement\",\n            \"message\": \"This is an important announcement for all students and staff.\",\n            \"category\": \"ANNOUNCEMENT\",\n            \"isRead\": false\n        }\n    ]\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Staff Management",
      "item": [
        {
          "name": "Create Staff",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"staff2@example.com\",\n    \"password\": \"password123\",\n    \"username\": \"newstaff2\",\n    \"name\": \"New Staff 2\",\n    \"phone\": [\"111-222-3333\"],\n    \"address\": \"456 Oak Avenue\",\n    \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n    \"role\": \"teacher\",\n    \"designation\": \"Math Teacher\",\n    \"dob\": \"1990-01-01\",\n    \"salary\": 50000,\n    \"joining_date\": \"2023-01-01\",\n    \"gender\": \"male\",\n    \"photo_url\": \"http://example.com/photo.jpg\",\n    \"isActive\": true,\n    \"qualification\": \"B.Sc. Mathematics\",\n    \"notes\": \"A new math teacher.\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{auth_url}}/api/staff",
              "host": [
                "{{auth_url}}"
              ],
              "path": [
                "api",
                "staff"
              ]
            },
            "description": "Creates a new staff member. Requires admin role."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"staff2@example.com\",\n    \"password\": \"password123\",\n    \"username\": \"newstaff2\",\n    \"name\": \"New Staff 2\",\n    \"phone\": [\"111-222-3333\"],\n    \"address\": \"456 Oak Avenue\",\n    \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n    \"role\": \"teacher\",\n    \"designation\": \"Math Teacher\",\n    \"dob\": \"1990-01-01\",\n    \"salary\": 50000,\n    \"joining_date\": \"2023-01-01\",\n    \"gender\": \"male\",\n    \"photo_url\": \"http://example.com/photo.jpg\",\n    \"isActive\": true,\n    \"qualification\": \"B.Sc. Mathematics\",\n    \"notes\": \"A new math teacher.\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/staff",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "staff"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Staff created successfully\",\n    \"data\": {\n        \"userId\": \"clxkzjwz1000bl0v8g1h3f7eg\"\n    }\n}"
            }
          ]
        },
        {
          "name": "Get Staff By School",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{auth_url}}/api/staff/school/:schoolId",
              "host": ["{{auth_url}}"],
              "path": ["api", "staff", "school", ":schoolId"],
              "query": [
                {
                  "key": "role",
                  "value": "teacher",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "schoolId",
                  "value": "clxkzjwxk0002l0v8g1h3f7e7"
                }
              ]
            },
            "description": "Gets staffs by school. Requires admin role."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/staff/school/:schoolId",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "staff", "school", ":schoolId"],
                  "variable": [
                    {
                      "key": "schoolId",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Staffs retrieved successfully\",\n    \"data\": {\n        \"totalItems\": 1,\n        \"totalPages\": 1,\n        \"currentPage\": 1,\n        \"prevPage\": null,\n        \"nextPage\": null,\n        \"itemPerPage\": 10,\n        \"data\": [\n            {\n                \"role\": \"teacher\",\n                \"user\": {\n                    \"username\": \"newstaff\",\n                    \"email\": \"staff@example.com\",\n                    \"staff\": {\n                        \"id\": \"clxkzjwyl0003l0v8g1h3f7e8\",\n                        \"name\": \"New Staff\",\n                        \"phone\": [\n                            \"111-222-3333\"\n                        ],\n                        \"email\": \"staff@example.com\",\n                        \"address\": \"456 Oak Avenue\",\n                        \"designation\": \"Math Teacher\",\n                        \"dob\": \"1990-01-01T00:00:00.000Z\",\n                        \"salary\": 50000,\n                        \"joining_date\": \"2023-01-01T00:00:00.000Z\",\n                        \"gender\": \"male\",\n                        \"photo_url\": \"http://example.com/photo.jpg\",\n                        \"qualification\": \"B.Sc. Mathematics\",\n                        \"notes\": \"A new math teacher.\",\n                        \"isActive\": true\n                    }\n                }\n            }\n        ]\n    }\n}"
            }
          ]
        },
        {
          "name": "Get Staff",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{auth_url}}/api/staff/:schoolId/:staffId",
              "host": ["{{auth_url}}"],
              "path": ["api", "staff", ":schoolId", ":staffId"],
              "variable": [
                {
                  "key": "schoolId",
                  "value": "clxkzjwxk0002l0v8g1h3f7e7"
                },
                {
                  "key": "staffId",
                  "value": "clxkzjwyl0003l0v8g1h3f7e8"
                }
              ]
            },
            "description": "Gets a staff member by ID. Requires admin role."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/staff/:schoolId/:staffId",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "staff", ":schoolId", ":staffId"],
                  "variable": [
                    {
                      "key": "schoolId",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7"
                    },
                    {
                      "key": "staffId",
                      "value": "clxkzjwyl0003l0v8g1h3f7e8"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": \"clxkzjwyl0003l0v8g1h3f7e8\",\n        \"name\": \"New Staff\",\n        \"phone\": [\n            \"111-222-3333\"\n        ],\n        \"email\": \"staff@example.com\",\n        \"address\": \"456 Oak Avenue\",\n        \"designation\": \"Math Teacher\",\n        \"dob\": \"1990-01-01T00:00:00.000Z\",\n        \"salary\": 50000,\n        \"joining_date\": \"2023-01-01T00:00:00.000Z\",\n        \"gender\": \"male\",\n        \"photo_url\": \"http://example.com/photo.jpg\",\n        \"qualification\": \"B.Sc. Mathematics\",\n        \"notes\": \"A new math teacher.\",\n        \"isActive\": true,\n        \"user\": {\n            \"username\": \"newstaff\",\n            \"email\": \"staff@example.com\",\n            \"userSchools\": [\n                {\n                    \"role\": \"teacher\",\n                    \"school\": {\n                        \"id\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n                        \"name\": \"My School\"\n                    }\n                }\n            ]\n        },\n        \"class_teacher\": []\n    }\n}"
            }
          ]
        },
        {
          "name": "Update Staff",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"New Staff (Updated)\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{auth_url}}/api/staff/:staffId",
              "host": ["{{auth_url}}"],
              "path": ["api", "staff", ":staffId"],
              "variable": [
                {
                  "key": "staffId",
                  "value": "clxkzjwyl0003l0v8g1h3f7e8"
                }
              ]
            },
            "description": "Updates a staff member. Requires authentication."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"New Staff (Updated)\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/staff/:staffId",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "staff", ":staffId"],
                  "variable": [
                    {
                      "key": "staffId",
                      "value": "clxkzjwyl0003l0v8g1h3f7e8"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Staff updated successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwyl0003l0v8g1h3f7e8\",\n        \"name\": \"New Staff (Updated)\",\n        \"phone\": [\n            \"111-222-3333\"\n        ],\n        \"email\": \"staff@example.com\",\n        \"address\": \"456 Oak Avenue\",\n        \"designation\": \"Math Teacher\",\n        \"dob\": \"1990-01-01T00:00:00.000Z\",\n        \"salary\": 50000,\n        \"joining_date\": \"2023-01-01T00:00:00.000Z\",\n        \"gender\": \"male\",\n        \"photo_url\": \"http://example.com/photo.jpg\",\n        \"qualification\": \"B.Sc. Mathematics\",\n        \"notes\": \"A new math teacher.\",\n        \"isActive\": true\n    }\n}"
            }
          ]
        },
        {
          "name": "Delete Staff",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{auth_url}}/api/staff/:schoolId/:staffId",
              "host": ["{{auth_url}}"],
              "path": ["api", "staff", ":schoolId", ":staffId"],
              "variable": [
                {
                  "key": "schoolId",
                  "value": "clxkzjwxk0002l0v8g1h3f7e7"
                },
                {
                  "key": "staffId",
                  "value": "clxkzjwyl0003l0v8g1h3f7e8"
                }
              ]
            },
            "description": "Deletes a staff member. Requires admin role."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/staff/:schoolId/:staffId",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "staff", ":schoolId", ":staffId"],
                  "variable": [
                    {
                      "key": "schoolId",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7"
                    },
                    {
                      "key": "staffId",
                      "value": "clxkzjwyl0003l0v8g1h3f7e8"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Staff account deleted successfully.\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Academic Management",
      "item": [
        {
          "name": "Attendance",
          "item": [
            {
              "name": "Take Section Attendance",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n    \"date\": \"2023-10-01\",\n    \"records\": [\n        {\n            \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n            \"status\": \"PRESENT\"\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/attendance/section",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "attendance", "section"]
                },
                "description": "Takes section attendance. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Tuition Fee\",\n    \"description\": \"Monthly tuition fee for students\",\n    \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/attendance/section",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "attendance", "section"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Section attendance taken successfully\"\n}"
                }
              ]
            },
            {
              "name": "Take Subject Attendance",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n    \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n    \"date\": \"2023-10-01\",\n    \"records\": [\n        {\n            \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n            \"status\": \"PRESENT\"\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/attendance/subject",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "attendance", "subject"]
                },
                "description": "Takes subject attendance. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n    \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n    \"date\": \"2023-10-01\",\n    \"records\": [\n        {\n            \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n            \"status\": \"PRESENT\"\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/attendance/subject",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "attendance", "subject"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Subject attendance taken successfully\"\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n    \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n    \"date\": \"invalid-date\",\n    \"records\": [\n        {\n            \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n            \"status\": \"INVALID_STATUS\"\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/attendance/subject",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "attendance", "subject"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Invalid date format.\"\n}"
                }
              ]
            },
            {
              "name": "Get Student Attendance",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/attendance/student?sectionId=clxkzjwyl0005l0v8g1h3f7ea&date=2023-10-01",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "attendance", "student"],
                  "query": [
                    {
                      "key": "sectionId",
                      "value": "clxkzjwyl0005l0v8g1h3f7ea"
                    },
                    {
                      "key": "date",
                      "value": "2023-10-01"
                    },
                    {
                      "key": "subjectId",
                      "value": "clxkzjwyw0008l0v8g1h3f7ed",
                      "disabled": true
                    },
                    {
                      "key": "month",
                      "value": "10",
                      "disabled": true
                    },
                    {
                      "key": "year",
                      "value": "2023",
                      "disabled": true
                    },
                    {
                      "key": "studentId",
                      "value": "clxkzjwz0000al0v8g1h3f7ef",
                      "disabled": true
                    }
                  ]
                },
                "description": "Gets student attendance."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/attendance/student?sectionId=clxkzjwyl0005l0v8g1h3f7ea&date=2023-10-01",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "attendance", "student"],
                      "query": [
                        {
                          "key": "sectionId",
                          "value": "clxkzjwyl0005l0v8g1h3f7ea"
                        },
                        {
                          "key": "date",
                          "value": "2023-10-01"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Student attendance retrieved successfully\",\n    \"data\": [\n        {\n            \"id\": \"clxkzjwz1000cl0v8g1h3f7eh\",\n            \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n            \"status\": \"PRESENT\",\n            \"date\": \"2023-10-01T00:00:00.000Z\"\n        }\n    ]\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/attendance/student?sectionId=clxkzjwyl0005l0v8g1h3f7ea&date=2023-10-02",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "attendance", "student"],
                      "query": [
                        {
                          "key": "sectionId",
                          "value": "clxkzjwyl0005l0v8g1h3f7ea"
                        },
                        {
                          "key": "date",
                          "value": "2023-10-02"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"No attendance records found for the specified criteria.\"\n}"
                }
              ]
            },
            {
              "name": "Take Staff Attendance",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"date\": \"2023-10-01\",\n    \"records\": [\n        {\n            \"staffId\": \"clxkzjwyl0003l0v8g1h3f7e8\",\n            \"status\": \"PRESENT\"\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/attendance/staff",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "attendance", "staff"]
                },
                "description": "Takes staff attendance. Requires admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"date\": \"2023-10-01\",\n    \"records\": [\n        {\n            \"staffId\": \"clxkzjwyl0003l0v8g1h3f7e8\",\n            \"status\": \"PRESENT\"\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/attendance/staff",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "attendance", "staff"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Staff attendance taken successfully\"\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"date\": \"invalid-date\",\n    \"records\": [\n        {\n            \"staffId\": \"clxkzjwyl0003l0v8g1h3f7e8\",\n            \"status\": \"INVALID_STATUS\"\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/attendance/staff",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "attendance", "staff"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Invalid date format.\"\n}"
                }
              ]
            },
            {
              "name": "Get Staff Attendance",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/attendance/staff?date=2023-10-01",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "attendance", "staff"],
                  "query": [
                    {
                      "key": "staffId",
                      "value": "clxkzjwyl0003l0v8g1h3f7e8",
                      "disabled": true
                    },
                    {
                      "key": "date",
                      "value": "2023-10-01"
                    },
                    {
                      "key": "month",
                      "value": "10",
                      "disabled": true
                    },
                    {
                      "key": "year",
                      "value": "2023",
                      "disabled": true
                    }
                  ]
                },
                "description": "Gets staff attendance."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/attendance/staff?date=2023-10-01",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "attendance", "staff"],
                      "query": [
                        {
                          "key": "date",
                          "value": "2023-10-01"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Staff attendance retrieved successfully\",\n    \"data\": [\n        {\n            \"id\": \"clxkzjwz1000dl0v8g1h3f7eh\",\n            \"staffId\": \"clxkzjwyl0003l0v8g1h3f7e8\",\n            \"status\": \"PRESENT\",\n            \"date\": \"2023-10-01T00:00:00.000Z\"\n        }\n    ]\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/attendance/staff?date=2023-10-02",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "attendance", "staff"],
                      "query": [
                        {
                          "key": "date",
                          "value": "2023-10-02"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"No attendance records found for the specified criteria.\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Subject",
          "item": [
            {
              "name": "Create Subject",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Mathematics\",\n    \"code\": \"MATH101\",\n    \"isActive\": true,\n    \"schoolIds\": [\"clxkzjwxk0002l0v8g1h3f7e7\"],\n    \"sectionIds\": [\"clxkzjwyl0005l0v8g1h3f7ea\"]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/subjects",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "subjects"]
                },
                "description": "Creates a new subject. Requires admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Mathematics\",\n    \"code\": \"MATH101\",\n    \"isActive\": true,\n    \"schoolIds\": [\"clxkzjwxk0002l0v8g1h3f7e7\"],\n    \"sectionIds\": [\"clxkzjwyl0005l0v8g1h3f7ea\"]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/subjects",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "subjects"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Subject created successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n        \"name\": \"Mathematics\",\n        \"code\": \"MATH101\",\n        \"isActive\": true\n    }\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"\",\n    \"code\": \"\",\n    \"isActive\": true,\n    \"schoolIds\": [],\n    \"sectionIds\": []\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/subjects",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "subjects"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Subject name is required\"\n}"
                }
              ]
            },
            {
              "name": "Get Subjects",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/subjects?schoolId=clxkzjwxk0002l0v8g1h3f7e7&sectionId=clxkzjwyl0005l0v8g1h3f7ea&isActive=true&page=1&limit=10",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "subjects"],
                  "query": [
                    {
                      "key": "schoolId",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7"
                    },
                    {
                      "key": "sectionId",
                      "value": "clxkzjwyl0005l0v8g1h3f7ea"
                    },
                    {
                      "key": "isActive",
                      "value": "true"
                    },
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                },
                "description": "Gets all subjects."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/subjects?schoolId=clxkzjwxk0002l0v8g1h3f7e7&sectionId=clxkzjwyl0005l0v8g1h3f7ea&isActive=true&page=1&limit=10",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "subjects"],
                      "query": [
                        {
                          "key": "schoolId",
                          "value": "clxkzjwxk0002l0v8g1h3f7e7"
                        },
                        {
                          "key": "sectionId",
                          "value": "clxkzjwyl0005l0v8g1h3f7ea"
                        },
                        {
                          "key": "isActive",
                          "value": "true"
                        },
                        {
                          "key": "page",
                          "value": "1"
                        },
                        {
                          "key": "limit",
                          "value": "10"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Subjects retrieved successfully\",\n    \"data\": {\n        \"totalItems\": 1,\n        \"totalPages\": 1,\n        \"currentPage\": 1,\n        \"prevPage\": null,\n        \"nextPage\": null,\n        \"itemPerPage\": 10,\n        \"data\": [\n            {\n                \"id\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n                \"name\": \"Mathematics\",\n                \"code\": \"MATH101\",\n                \"isActive\": true\n            }\n        ]\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/subjects?schoolId=non-existent-school-id",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "subjects"],
                      "query": [
                        {
                          "key": "schoolId",
                          "value": "non-existent-school-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"No subjects found for the specified criteria.\"\n}"
                }
              ]
            },
            {
              "name": "Get Subject",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/subjects/:id",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "subjects", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwyw0008l0v8g1h3f7ed"
                    }
                  ]
                },
                "description": "Gets a single subject by ID."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/subjects/:id",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "subjects", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwyw0008l0v8g1h3f7ed"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Subject retrieved successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n        \"name\": \"Mathematics\",\n        \"code\": \"MATH101\",\n        \"isActive\": true\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/subjects/:id",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "subjects", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-subject-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Subject not found\"\n}"
                }
              ]
            },
            {
              "name": "Update Subject",
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Advanced Mathematics\",\n    \"code\": \"MATH102\",\n    \"isActive\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/subjects/:id",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "subjects", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwyw0008l0v8g1h3f7ed"
                    }
                  ]
                },
                "description": "Updates a subject by ID. Requires admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Advanced Mathematics\",\n    \"code\": \"MATH102\",\n    \"isActive\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/subjects/:id",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "subjects", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwyw0008l0v8g1h3f7ed"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Subject updated successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n        \"name\": \"Advanced Mathematics\",\n        \"code\": \"MATH102\",\n        \"isActive\": false\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Advanced Mathematics\",\n    \"code\": \"MATH102\",\n    \"isActive\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/subjects/:id",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "subjects", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-subject-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Subject not found\"\n}"
                }
              ]
            },
            {
              "name": "Delete Subject",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/subjects/:id",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "subjects", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwyw0008l0v8g1h3f7ed"
                    }
                  ]
                },
                "description": "Deletes a subject by ID. Requires admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/subjects/:id",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "subjects", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwyw0008l0v8g1h3f7ed"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Subject deleted successfully\"\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/subjects/:id",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "subjects", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-subject-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Subject not found\"\n}"
                }
              ]
            },
            {
              "name": "Assign Teacher",
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"teacherId\": \"clxkzjwyl0003l0v8g1h3f7e8\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/subjects/:id/teacher",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "subjects", ":id", "teacher"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwyw0008l0v8g1h3f7ed"
                    }
                  ]
                },
                "description": "Assigns a teacher to a subject. Requires admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"teacherId\": \"clxkzjwyl0003l0v8g1h3f7e8\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/subjects/:id/teacher",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "subjects", ":id", "teacher"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwyw0008l0v8g1h3f7ed"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Teacher assigned to subject successfully\"\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"teacherId\": \"non-existent-teacher-id\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/subjects/:id/teacher",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "subjects", ":id", "teacher"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwyw0008l0v8g1h3f7ed"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Teacher not found\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "TimeTable",
          "item": [
            {
              "name": "Create Timetable",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n    \"classId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n    \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n    \"sessionId\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n    \"status\": \"DRAFT\",\n    \"entries\": [\n        {\n            \"day\": [\"Monday\"],\n            \"startTime\": \"2023-10-02T09:00:00Z\",\n            \"endTime\": \"2023-10-02T10:00:00Z\",\n            \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n            \"teacherId\": \"clxkzjwyl0003l0v8g1h3f7e8\",\n            \"type\": \"REGULAR\"\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/timetables",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "timetables"]
                },
                "description": "Creates a new timetable. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n    \"classId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n    \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n    \"sessionId\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n    \"status\": \"DRAFT\",\n    \"entries\": [\n        {\n            \"day\": [\"Monday\"],\n            \"startTime\": \"2023-10-02T09:00:00Z\",\n            \"endTime\": \"2023-10-02T10:00:00Z\",\n            \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n            \"teacherId\": \"clxkzjwyl0003l0v8g1h3f7e8\",\n            \"type\": \"REGULAR\"\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/timetables",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "timetables"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Timetable created successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz1000el0v8g1h3f7ei\",\n        \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n        \"classId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n        \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n        \"sessionId\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n        \"status\": \"DRAFT\"\n    }\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"schoolId\": \"\",\n    \"classId\": \"\",\n    \"sectionId\": \"\",\n    \"sessionId\": \"\",\n    \"status\": \"INVALID_STATUS\",\n    \"entries\": []\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/timetables",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "timetables"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"School ID is required\"\n}"
                }
              ]
            },
            {
              "name": "Get Timetable by School",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/timetables/school/:schoolId",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "timetables", "school", ":schoolId"],
                  "variable": [
                    {
                      "key": "schoolId",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7"
                    }
                  ]
                },
                "description": "Gets school timetables."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/timetables/school/:schoolId",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "timetables", "school", ":schoolId"],
                      "variable": [
                        {
                          "key": "schoolId",
                          "value": "clxkzjwxk0002l0v8g1h3f7e7"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Timetables retrieved successfully\",\n    \"data\": [\n        {\n            \"id\": \"clxkzjwz1000el0v8g1h3f7ei\",\n            \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n            \"classId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n            \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n            \"sessionId\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n            \"status\": \"DRAFT\",\n            \"entries\": [\n                {\n                    \"id\": \"clxkzjwz1000fl0v8g1h3f7ej\",\n                    \"day\": [\"Monday\"],\n                    \"startTime\": \"2023-10-02T09:00:00.000Z\",\n                    \"endTime\": \"2023-10-02T10:00:00.000Z\",\n                    \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n                    \"teacherId\": \"clxkzjwyl0003l0v8g1h3f7e8\",\n                    \"type\": \"REGULAR\"\n                }\n            ]\n        }\n    ]\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/timetables/school/:schoolId",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "timetables", "school", ":schoolId"],
                      "variable": [
                        {
                          "key": "schoolId",
                          "value": "non-existent-school-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"No timetables found for this school\"\n}"
                }
              ]
            },
            {
              "name": "Get Timetable by Section",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{auth_url}}/api/timetables/class/:sectionId",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "timetables", "class", ":sectionId"],
                  "variable": [
                    {
                      "key": "sectionId",
                      "value": "clxkzjwyl0005l0v8g1h3f7ea"
                    }
                  ]
                },
                "description": "Gets a class timetable."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/timetables/class/:sectionId",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "timetables", "class", ":sectionId"],
                      "variable": [
                        {
                          "key": "sectionId",
                          "value": "clxkzjwyl0005l0v8g1h3f7ea"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Timetable retrieved successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz1000el0v8g1h3f7ei\",\n        \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n        \"classId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n        \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n        \"sessionId\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n        \"status\": \"DRAFT\",\n        \"entries\": [\n            {\n                \"id\": \"clxkzjwz1000fl0v8g1h3f7ej\",\n                \"day\": [\"Monday\"],\n                \"startTime\": \"2023-10-02T09:00:00.000Z\",\n                \"endTime\": \"2023-10-02T10:00:00.000Z\",\n                \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n                \"teacherId\": \"clxkzjwyl0003l0v8g1h3f7e8\",\n                \"type\": \"REGULAR\"\n            }\n        ]\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/timetables/class/:sectionId",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "timetables", "class", ":sectionId"],
                      "variable": [
                        {
                          "key": "sectionId",
                          "value": "non-existent-section-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Timetable not found for this section\"\n}"
                }
              ]
            },
            {
              "name": "Delete Timetable",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{auth_url}}/api/timetables/:timetableId",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "timetables", ":timetableId"],
                  "variable": [
                    {
                      "key": "timetableId",
                      "value": "clxkzjwz1000el0v8g1h3f7ei"
                    }
                  ]
                },
                "description": "Deletes a timetable. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/timetables/:timetableId",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "timetables", ":timetableId"],
                      "variable": [
                        {
                          "key": "timetableId",
                          "value": "clxkzjwz1000el0v8g1h3f7ei"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Timetable deleted successfully\"\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/timetables/:timetableId",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "timetables", ":timetableId"],
                      "variable": [
                        {
                          "key": "timetableId",
                          "value": "non-existent-timetable-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Timetable not found\"\n}"
                }
              ]
            },
            {
              "name": "Create Timetable Entry",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"timetableId\": \"clxkzjwz1000el0v8g1h3f7ei\",\n    \"day\": [\"Tuesday\"],\n    \"startTime\": \"2023-10-03T10:00:00Z\",\n    \"endTime\": \"2023-10-03T11:00:00Z\",\n    \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n    \"teacherId\": \"clxkzjwyl0003l0v8g1h3f7e8\",\n    \"type\": \"REGULAR\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/timetables/entries",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "timetables", "entries"]
                },
                "description": "Creates a new timetable entry. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"timetableId\": \"clxkzjwz1000el0v8g1h3f7ei\",\n    \"day\": [\"Tuesday\"],\n    \"startTime\": \"2023-10-03T10:00:00Z\",\n    \"endTime\": \"2023-10-03T11:00:00Z\",\n    \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n    \"teacherId\": \"clxkzjwyl0003l0v8g1h3f7e8\",\n    \"type\": \"REGULAR\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/timetables/entries",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "timetables", "entries"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Timetable entry created successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz1000gl0v8g1h3f7ek\",\n        \"timetableId\": \"clxkzjwz1000el0v8g1h3f7ei\",\n        \"day\": [\"Tuesday\"],\n        \"startTime\": \"2023-10-03T10:00:00.000Z\",\n        \"endTime\": \"2023-10-03T11:00:00.000Z\",\n        \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n        \"teacherId\": \"clxkzjwyl0003l0v8g1h3f7e8\",\n        \"type\": \"REGULAR\"\n    }\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"timetableId\": \"\",\n    \"day\": [],\n    \"startTime\": \"\",\n    \"endTime\": \"\",\n    \"subjectId\": \"\",\n    \"teacherId\": \"\",\n    \"type\": \"\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/timetables/entries",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "timetables", "entries"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Timetable ID is required\"\n}"
                }
              ]
            },
            {
              "name": "Update Timetable Entry",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"day\": [\"Wednesday\"],\n    \"startTime\": \"2023-10-04T11:00:00Z\",\n    \"endTime\": \"2023-10-04T12:00:00Z\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/timetables/entries/:entryId",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "timetables", "entries", ":entryId"],
                  "variable": [
                    {
                      "key": "entryId",
                      "value": "clxkzjwz1000gl0v8g1h3f7ek"
                    }
                  ]
                },
                "description": "Updates a timetable entry. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"day\": [\"Wednesday\"],\n    \"startTime\": \"2023-10-04T11:00:00Z\",\n    \"endTime\": \"2023-10-04T12:00:00Z\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/timetables/entries/:entryId",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "timetables", "entries", ":entryId"],
                      "variable": [
                        {
                          "key": "entryId",
                          "value": "clxkzjwz1000gl0v8g1h3f7ek"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Timetable entry updated successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz1000gl0v8g1h3f7ek\",\n        \"timetableId\": \"clxkzjwz1000el0v8g1h3f7ei\",\n        \"day\": [\"Wednesday\"],\n        \"startTime\": \"2023-10-04T11:00:00.000Z\",\n        \"endTime\": \"2023-10-04T12:00:00.000Z\",\n        \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n        \"teacherId\": \"clxkzjwyl0003l0v8g1h3f7e8\",\n        \"type\": \"REGULAR\"\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"day\": [\"Wednesday\"],\n    \"startTime\": \"2023-10-04T11:00:00Z\",\n    \"endTime\": \"2023-10-04T12:00:00Z\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/timetables/entries/:entryId",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "timetables", "entries", ":entryId"],
                      "variable": [
                        {
                          "key": "entryId",
                          "value": "non-existent-entry-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Timetable entry not found\"\n}"
                }
              ]
            },
            {
              "name": "Delete Timetable Entry",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{auth_url}}/api/timetables/entries/:entryId",
                  "host": ["{{auth_url}}"],
                  "path": ["api", "timetables", "entries", ":entryId"],
                  "variable": [
                    {
                      "key": "entryId",
                      "value": "clxkzjwz1000gl0v8g1h3f7ek"
                    }
                  ]
                },
                "description": "Deletes a timetable entry. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/timetables/entries/:entryId",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "timetables", "entries", ":entryId"],
                      "variable": [
                        {
                          "key": "entryId",
                          "value": "clxkzjwz1000gl0v8g1h3f7ek"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Timetable entry deleted successfully\"\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/timetables/entries/:entryId",
                      "host": ["{{auth_url}}"],
                      "path": ["api", "timetables", "entries", ":entryId"],
                      "variable": [
                        {
                          "key": "entryId",
                          "value": "non-existent-entry-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Timetable entry not found\"\n}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Exam and CBT Management",
      "item": [
        {
          "name": "CBT (Computer-Based Testing)",
          "item": [
            {
              "name": "Start Exam Attempt",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
              "raw": "{\n    \"examPaperId\": \"clxkzjwz3000tl0v8g1h3f7ey\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
                },
                "url": {
              "raw": "{{auth_url}}/api/exam/cbt/attempts/start",
              "host": [
                "{{auth_url}}"
              ],
              "path": [
                "api",
                "exam",
                "cbt",
                "attempts",
                "start"
              ]
            },
            "description": "Starts an exam attempt. Requires student role."
              },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"examPaperId\": \"clxkzjwz3000tl0v8g1h3f7ey\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/cbt/attempts/start",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "cbt",
                    "attempts",
                    "start"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"message\": \"Exam attempt started successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz4000vl0v8g1h3f7f0\",\n        \"examPaperId\": \"clxkzjwz3000tl0v8g1h3f7ey\",\n        \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n        \"startTime\": \"2023-10-01T10:00:00.000Z\",\n        \"endTime\": null,\n        \"score\": null,\n        \"status\": \"IN_PROGRESS\"\n    }\n}"
            },
            {
              "name": "Error - Already Started",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"examPaperId\": \"clxkzjwz3000tl0v8g1h3f7ey\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/cbt/attempts/start",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "cbt",
                    "attempts",
                    "start"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": false,\n    \"message\": \"You have already started this exam.\"\n}"
            }
          ]
            },
            {
              "name": "Save Exam Response",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"questionId\": \"clxkzjwz4000ul0v8g1h3f7ez\",\n    \"studentAnswer\": [1]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/cbt/attempts/:attemptId/responses",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "cbt",
                    "attempts",
                    ":attemptId",
                    "responses"
                  ],
                  "variable": [
                    {
                      "key": "attemptId",
                      "value": "clxkzjwz4000vl0v8g1h3f7f0"
                    }
                  ]
                },
                "description": "Saves a response to a question. Requires student role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"questionId\": \"clxkzjwz4000ul0v8g1h3f7ez\",\n    \"studentAnswer\": [1]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/cbt/attempts/:attemptId/responses",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "cbt",
                        "attempts",
                        ":attemptId",
                        "responses"
                      ],
                      "variable": [
                        {
                          "key": "attemptId",
                          "value": "clxkzjwz4000vl0v8g1h3f7f0"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Response saved successfully\"\n}"
                },
                {
                  "name": "Error - Exam Submitted",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"questionId\": \"clxkzjwz4000ul0v8g1h3f7ez\",\n    \"studentAnswer\": [1]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/cbt/attempts/:attemptId/responses",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "cbt",
                        "attempts",
                        ":attemptId",
                        "responses"
                      ],
                      "variable": [
                        {
                          "key": "attemptId",
                          "value": "clxkzjwz4000vl0v8g1h3f7f0"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Cannot save response, exam has already been submitted.\"\n}"
                }
              ]
            },
            {
              "name": "Save Essay Response",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"questionId\": \"clxkzjwz4000vl0v8g1h3f7f1\",\n    \"studentAnswer\": \"This is a sample essay response.\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/cbt/attempts/:attemptId/responses",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "cbt",
                    "attempts",
                    ":attemptId",
                    "responses"
                  ],
                  "variable": [
                    {
                      "key": "attemptId",
                      "value": "clxkzjwz4000vl0v8g1h3f7f0"
                    }
                  ]
                },
                "description": "Saves an essay response. Requires student role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"questionId\": \"clxkzjwz4000vl0v8g1h3f7f1\",\n    \"studentAnswer\": \"This is a sample essay response.\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/cbt/attempts/:attemptId/responses",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "cbt",
                        "attempts",
                        ":attemptId",
                        "responses"
                      ],
                      "variable": [
                        {
                          "key": "attemptId",
                          "value": "clxkzjwz4000vl0v8g1h3f7f0"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Response saved successfully\"\n}"
                },
                {
                  "name": "Error - Exam Submitted",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"questionId\": \"clxkzjwz4000vl0v8g1h3f7f1\",\n    \"studentAnswer\": \"This is a sample essay response.\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/cbt/attempts/:attemptId/responses",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "cbt",
                        "attempts",
                        ":attemptId",
                        "responses"
                      ],
                      "variable": [
                        {
                          "key": "attemptId",
                          "value": "clxkzjwz4000vl0v8g1h3f7f0"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Cannot save response, exam has already been submitted.\"\n}"
                }
              ]
            },
            {
              "name": "Save True/False Response",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"questionId\": \"clxkzjwz4000wl0v8g1h3f7f2\",\n    \"studentAnswer\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/cbt/attempts/:attemptId/responses",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "cbt",
                    "attempts",
                    ":attemptId",
                    "responses"
                  ],
                  "variable": [
                    {
                      "key": "attemptId",
                      "value": "clxkzjwz4000vl0v8g1h3f7f0"
                    }
                  ]
                },
                "description": "Saves a true/false response. Requires student role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"questionId\": \"clxkzjwz4000wl0v8g1h3f7f2\",\n    \"studentAnswer\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/cbt/attempts/:attemptId/responses",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "cbt",
                        "attempts",
                        ":attemptId",
                        "responses"
                      ],
                      "variable": [
                        {
                          "key": "attemptId",
                          "value": "clxkzjwz4000vl0v8g1h3f7f0"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Response saved successfully\"\n}"
                },
                {
                  "name": "Error - Exam Submitted",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"questionId\": \"clxkzjwz4000wl0v8g1h3f7f2\",\n    \"studentAnswer\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/cbt/attempts/:attemptId/responses",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "cbt",
                        "attempts",
                        ":attemptId",
                        "responses"
                      ],
                      "variable": [
                        {
                          "key": "attemptId",
                          "value": "clxkzjwz4000vl0v8g1h3f7f0"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Cannot save response, exam has already been submitted.\"\n}"
                }
              ]
            },
            {
              "name": "Save Fill-in-Blanks Response",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"questionId\": \"clxkzjwz4000xl0v8g1h3f7f3\",\n    \"studentAnswer\": \"3.14159\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/cbt/attempts/:attemptId/responses",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "cbt",
                    "attempts",
                    ":attemptId",
                    "responses"
                  ],
                  "variable": [
                    {
                      "key": "attemptId",
                      "value": "clxkzjwz4000vl0v8g1h3f7f0"
                    }
                  ]
                },
                "description": "Saves a fill-in-the-blanks response. Requires student role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"questionId\": \"clxkzjwz4000xl0v8g1h3f7f3\",\n    \"studentAnswer\": \"3.14159\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/cbt/attempts/:attemptId/responses",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "cbt",
                        "attempts",
                        ":attemptId",
                        "responses"
                      ],
                      "variable": [
                        {
                          "key": "attemptId",
                          "value": "clxkzjwz4000vl0v8g1h3f7f0"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Response saved successfully\"\n}"
                },
                {
                  "name": "Error - Exam Submitted",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"questionId\": \"clxkzjwz4000xl0v8g1h3f7f3\",\n    \"studentAnswer\": \"3.14159\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/cbt/attempts/:attemptId/responses",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "cbt",
                        "attempts",
                        ":attemptId",
                        "responses"
                      ],
                      "variable": [
                        {
                          "key": "attemptId",
                          "value": "clxkzjwz4000vl0v8g1h3f7f0"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Cannot save response, exam has already been submitted.\"\n}"
                }
              ]
            },
            {
              "name": "Submit Exam Attempt",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/exam/cbt/attempts/:attemptId/submit",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "cbt",
                    "attempts",
                    ":attemptId",
                    "submit"
                  ],
                  "variable": [
                    {
                      "key": "attemptId",
                      "value": "clxkzjwz4000vl0v8g1h3f7f0"
                    }
                  ]
                },
                "description": "Submits an exam. Requires student role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/cbt/attempts/:attemptId/submit",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "cbt",
                        "attempts",
                        ":attemptId",
                        "submit"
                      ],
                      "variable": [
                        {
                          "key": "attemptId",
                          "value": "clxkzjwz4000vl0v8g1h3f7f0"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Exam submitted successfully\"\n}"
                },
                {
                  "name": "Error - Already Submitted",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/cbt/attempts/:attemptId/submit",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "cbt",
                        "attempts",
                        ":attemptId",
                        "submit"
                      ],
                      "variable": [
                        {
                          "key": "attemptId",
                          "value": "clxkzjwz4000vl0v8g1h3f7f0"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Exam has already been submitted.\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Exam Management",
          "item": [
            {
              "name": "Create Exam",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Final Examination\",\n    \"startDate\": \"2023-12-01T09:00:00Z\",\n    \"endDate\": \"2023-12-15T17:00:00Z\",\n    \"classId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n    \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n    \"termId\": \"clxkzjwxk000al0v8g1h3f7ef\",\n    \"sessionId\": \"clxkzjwxk0009l0v8g1h3f7ee\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/management",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "management"
                  ]
                },
                "description": "Creates a new exam. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"title\": \"Final Examination\",\n    \"startDate\": \"2023-12-01T09:00:00Z\",\n    \"endDate\": \"2023-12-15T17:00:00Z\",\n    \"classId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n    \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n    \"termId\": \"clxkzjwxk000al0v8g1h3f7ef\",\n    \"sessionId\": \"clxkzjwxk0009l0v8g1h3f7ee\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Exam created successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz3000rl0v8g1h3f7ew\",\n        \"title\": \"Final Examination\",\n        \"startDate\": \"2023-12-01T09:00:00.000Z\",\n        \"endDate\": \"2023-12-15T17:00:00.000Z\"\n    }\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"title\": \"\",\n    \"startDate\": \"\",\n    \"endDate\": \"\",\n    \"classId\": \"\",\n    \"sectionId\": \"\",\n    \"termId\": \"\",\n    \"sessionId\": \"\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Title is required\"\n}"
                }
              ]
            },
            {
              "name": "Get All Exams",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/exam/management",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "management"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "description": "Gets all exams."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Exams retrieved successfully\",\n    \"data\": {\n        \"totalItems\": 1,\n        \"totalPages\": 1,\n        \"currentPage\": 1,\n        \"prevPage\": null,\n        \"nextPage\": null,\n        \"itemPerPage\": 10,\n        \"data\": [\n            {\n                \"id\": \"clxkzjwz3000rl0v8g1h3f7ew\",\n                \"title\": \"Final Examination\",\n                \"startDate\": \"2023-12-01T09:00:00.000Z\",\n                \"endDate\": \"2023-12-15T17:00:00.000Z\"\n            }\n        ]\n    }\n}"
                },
                {
                  "name": "Error - No Exams Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management"
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"No exams found\"\n}"
                }
              ]
            },
            {
              "name": "Get Exam by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/exam/management/:id",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "management",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwz3000rl0v8g1h3f7ew"
                    }
                  ]
                },
                "description": "Gets a single exam by ID."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwz3000rl0v8g1h3f7ew"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Exam retrieved successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz3000rl0v8g1h3f7ew\",\n        \"title\": \"Final Examination\",\n        \"startDate\": \"2023-12-01T09:00:00.000Z\",\n        \"endDate\": \"2023-12-15T17:00:00.000Z\",\n        \"papers\": []\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-exam-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Exam not found\"\n}"
                }
              ]
            },
            {
              "name": "Update Exam",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Final Examination (Updated)\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/management/:id",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "management",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwz3000rl0v8g1h3f7ew"
                    }
                  ]
                },
                "description": "Updates an exam by ID. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"title\": \"Final Examination (Updated)\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwz3000rl0v8g1h3f7ew"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Exam updated successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz3000rl0v8g1h3f7ew\",\n        \"title\": \"Final Examination (Updated)\",\n        \"startDate\": \"2023-12-01T09:00:00.000Z\",\n        \"endDate\": \"2023-12-15T17:00:00.000Z\"\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"title\": \"Final Examination (Updated)\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-exam-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Exam not found\"\n}"
                }
              ]
            },
            {
              "name": "Delete Exam",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/exam/management/:id",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "management",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwz3000rl0v8g1h3f7ew"
                    }
                  ]
                },
                "description": "Deletes an exam by ID. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwz3000rl0v8g1h3f7ew"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Exam deleted successfully\"\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-exam-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Exam not found\"\n}"
                }
              ]
            },
            {
              "name": "Get Exam Timetable",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/exam/management/timetable/view?classId=clxkzjwyl0004l0v8g1h3f7e9&sectionId=clxkzjwyl0005l0v8g1h3f7ea",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "management",
                    "timetable",
                    "view"
                  ],
                  "query": [
                    {
                      "key": "classId",
                      "value": "clxkzjwyl0004l0v8g1h3f7e9"
                    },
                    {
                      "key": "sectionId",
                      "value": "clxkzjwyl0005l0v8g1h3f7ea"
                    }
                  ]
                },
                "description": "Gets the exam timetable."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management/timetable/view?classId=clxkzjwyl0004l0v8g1h3f7e9&sectionId=clxkzjwyl0005l0v8g1h3f7ea",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management",
                        "timetable",
                        "view"
                      ],
                      "query": [
                        {
                          "key": "classId",
                          "value": "clxkzjwyl0004l0v8g1h3f7e9"
                        },
                        {
                          "key": "sectionId",
                          "value": "clxkzjwyl0005l0v8g1h3f7ea"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Exam timetable retrieved successfully\",\n    \"data\": [\n        {\n            \"id\": \"clxkzjwz3000rl0v8g1h3f7ew\",\n            \"title\": \"Final Examination\",\n            \"startDate\": \"2023-12-01T09:00:00.000Z\",\n            \"endDate\": \"2023-12-15T17:00:00.000Z\",\n            \"papers\": []\n        }\n    ]\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management/timetable/view?classId=non-existent-class-id&sectionId=non-existent-section-id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management",
                        "timetable",
                        "view"
                      ],
                      "query": [
                        {
                          "key": "classId",
                          "value": "non-existent-class-id"
                        },
                        {
                          "key": "sectionId",
                          "value": "non-existent-section-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Exam timetable not found for the specified class and section\"\n}"
                }
              ]
            },
            {
              "name": "Add Exam Paper",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n    \"maxMarks\": 100,\n    \"startTime\": \"2023-12-01T09:00:00Z\",\n    \"endTime\": \"2023-12-01T11:00:00Z\",\n    \"mode\": \"CBT\",\n    \"questionBankId\": \"clxkzjwz3000sl0v8g1h3f7ex\",\n    \"totalQuestions\": 10,\n    \"instructions\": \"Read all questions carefully.\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/management/:examId/papers",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "management",
                    ":examId",
                    "papers"
                  ],
                  "variable": [
                    {
                      "key": "examId",
                      "value": "clxkzjwz3000rl0v8g1h3f7ew"
                    }
                  ]
                },
                "description": "Adds an exam paper to an exam. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n    \"maxMarks\": 100,\n    \"startTime\": \"2023-12-01T09:00:00Z\",\n    \"endTime\": \"2023-12-01T11:00:00Z\",\n    \"mode\": \"CBT\",\n    \"questionBankId\": \"clxkzjwz3000sl0v8g1h3f7ex\",\n    \"totalQuestions\": 10,\n    \"instructions\": \"Read all questions carefully.\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management/:examId/papers",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management",
                        ":examId",
                        "papers"
                      ],
                      "variable": [
                        {
                          "key": "examId",
                          "value": "clxkzjwz3000rl0v8g1h3f7ew"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Exam paper added successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz3000tl0v8g1h3f7ey\",\n        \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n        \"maxMarks\": 100,\n        \"startTime\": \"2023-12-01T09:00:00.000Z\",\n        \"endTime\": \"2023-12-01T11:00:00.000Z\",\n        \"mode\": \"CBT\",\n        \"questionBankId\": \"clxkzjwz3000sl0v8g1h3f7ex\",\n        \"totalQuestions\": 10,\n        \"instructions\": \"Read all questions carefully.\"\n    }\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"subjectId\": \"\",\n    \"maxMarks\": null,\n    \"startTime\": \"\",\n    \"endTime\": \"\",\n    \"mode\": \"INVALID_MODE\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management/:examId/papers",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management",
                        ":examId",
                        "papers"
                      ],
                      "variable": [
                        {
                          "key": "examId",
                          "value": "clxkzjwz3000rl0v8g1h3f7ew"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Subject ID is required\"\n}"
                }
              ]
            },
            {
              "name": "Update Exam Paper",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"maxMarks\": 110\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/management/:examId/papers/:paperId",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "management",
                    ":examId",
                    "papers",
                    ":paperId"
                  ],
                  "variable": [
                    {
                      "key": "examId",
                      "value": "clxkzjwz3000rl0v8g1h3f7ew"
                    },
                    {
                      "key": "paperId",
                      "value": "clxkzjwz3000tl0v8g1h3f7ey"
                    }
                  ]
                },
                "description": "Updates an exam paper. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"maxMarks\": 110\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management/:examId/papers/:paperId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management",
                        ":examId",
                        "papers",
                        ":paperId"
                      ],
                      "variable": [
                        {
                          "key": "examId",
                          "value": "clxkzjwz3000rl0v8g1h3f7ew"
                        },
                        {
                          "key": "paperId",
                          "value": "clxkzjwz3000tl0v8g1h3f7ey"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Exam paper updated successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz3000tl0v8g1h3f7ey\",\n        \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n        \"maxMarks\": 110,\n        \"startTime\": \"2023-12-01T09:00:00.000Z\",\n        \"endTime\": \"2023-12-01T11:00:00.000Z\",\n        \"mode\": \"CBT\",\n        \"questionBankId\": \"clxkzjwz3000sl0v8g1h3f7ex\",\n        \"totalQuestions\": 10,\n        \"instructions\": \"Read all questions carefully.\"\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"maxMarks\": 110\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management/:examId/papers/:paperId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management",
                        ":examId",
                        "papers",
                        ":paperId"
                      ],
                      "variable": [
                        {
                          "key": "examId",
                          "value": "clxkzjwz3000rl0v8g1h3f7ew"
                        },
                        {
                          "key": "paperId",
                          "value": "non-existent-paper-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Exam paper not found\"\n}"
                }
              ]
            },
            {
              "name": "Delete Exam Paper",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/exam/management/:examId/papers/:paperId",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "management",
                    ":examId",
                    "papers",
                    ":paperId"
                  ],
                  "variable": [
                    {
                      "key": "examId",
                      "value": "clxkzjwz3000rl0v8g1h3f7ew"
                    },
                    {
                      "key": "paperId",
                      "value": "clxkzjwz3000tl0v8g1h3f7ey"
                    }
                  ]
                },
                "description": "Deletes an exam paper. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management/:examId/papers/:paperId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management",
                        ":examId",
                        "papers",
                        ":paperId"
                      ],
                      "variable": [
                        {
                          "key": "examId",
                          "value": "clxkzjwz3000rl0v8g1h3f7ew"
                        },
                        {
                          "key": "paperId",
                          "value": "clxkzjwz3000tl0v8g1h3f7ey"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Exam paper deleted successfully\"\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/management/:examId/papers/:paperId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "management",
                        ":examId",
                        "papers",
                        ":paperId"
                      ],
                      "variable": [
                        {
                          "key": "examId",
                          "value": "clxkzjwz3000rl0v8g1h3f7ew"
                        },
                        {
                          "key": "paperId",
                          "value": "non-existent-paper-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Exam paper not found\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Exam Settings",
          "item": [
            {
              "name": "Get Global Exam Settings",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/exam/settings/global",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "settings",
                    "global"
                  ]
                },
                "description": "Gets global exam settings."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/settings/global",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "settings",
                        "global"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Global exam settings retrieved successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz2000ml0v8g1h3f7er\",\n        \"passMark\": 40,\n        \"maxRetakes\": 2,\n        \"autoGrading\": true,\n        \"resultVisibility\": \"PUBLISHED\",\n        \"allowLateSubmission\": false\n    }\n}"
                }
              ]
            },
            {
              "name": "Create/Update Global Exam Settings",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"passMark\": 45,\n    \"maxRetakes\": 3\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/settings/global",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "settings",
                    "global"
                  ]
                },
                "description": "Creates or updates global exam settings. Requires admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"passMark\": 45,\n    \"maxRetakes\": 3\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/settings/global",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "settings",
                        "global"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Global exam settings updated successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz2000ml0v8g1h3f7er\",\n        \"passMark\": 45,\n        \"maxRetakes\": 3,\n        \"autoGrading\": true,\n        \"resultVisibility\": \"PUBLISHED\",\n        \"allowLateSubmission\": false\n    }\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"passMark\": -10,\n    \"maxRetakes\": -1\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/settings/global",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "settings",
                        "global"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Pass mark must be a positive number\"\n}"
                }
              ]
            },
            {
              "name": "Get Grade Criteria",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/exam/settings/grades",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "settings",
                    "grades"
                  ]
                },
                "description": "Gets grade criteria."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/settings/grades",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "settings",
                        "grades"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Grade criteria retrieved successfully\",\n    \"data\": [\n        {\n            \"id\": \"clxkzjwz2000nl0v8g1h3f7es\",\n            \"grade\": \"A\",\n            \"minScore\": 90,\n            \"maxScore\": 100,\n            \"description\": \"Excellent\",\n            \"point\": 5\n        }\n    ]\n}"
                },
                {
                  "name": "Error - No Grade Criteria Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/settings/grades",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "settings",
                        "grades"
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"No grade criteria found\"\n}"
                }
              ]
            },
            {
              "name": "Create Grade Criteria",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"grade\": \"B\",\n    \"minScore\": 70,\n    \"maxScore\": 89,\n    \"description\": \"Good\",\n    \"point\": 4\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/settings/grades",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "settings",
                    "grades"
                  ]
                },
                "description": "Creates grade criteria. Requires admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"grade\": \"B\",\n    \"minScore\": 70,\n    \"maxScore\": 89,\n    \"description\": \"Good\",\n    \"point\": 4\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/settings/grades",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "settings",
                        "grades"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Grade criteria created successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz2000ol0v8g1h3f7et\",\n        \"grade\": \"B\",\n        \"minScore\": 70,\n        \"maxScore\": 89,\n        \"description\": \"Good\",\n        \"point\": 4\n    }\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"grade\": \"\",\n    \"minScore\": null,\n    \"maxScore\": null\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/settings/grades",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "settings",
                        "grades"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Grade is required\"\n}"
                }
              ]
            },
            {
              "name": "Update Grade Criteria",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"grade\": \"A+\",\n    \"minScore\": 90\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/settings/grades/:id",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "settings",
                    "grades",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwz2000nl0v8g1h3f7es"
                    }
                  ]
                },
                "description": "Updates grade criteria. Requires admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"grade\": \"A+\",\n    \"minScore\": 90\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/settings/grades/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "settings",
                        "grades",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwz2000nl0v8g1h3f7es"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Grade criteria updated successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz2000nl0v8g1h3f7es\",\n        \"grade\": \"A+\",\n        \"minScore\": 90,\n        \"maxScore\": 100,\n        \"description\": \"Excellent\",\n        \"point\": 5\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"grade\": \"A+\",\n    \"minScore\": 90\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/settings/grades/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "settings",
                        "grades",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-grade-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Grade criteria not found\"\n}"
                }
              ]
            },
            {
              "name": "Delete Grade Criteria",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/exam/settings/grades/:id",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "settings",
                    "grades",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwz2000nl0v8g1h3f7es"
                    }
                  ]
                },
                "description": "Deletes grade criteria. Requires admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/settings/grades/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "settings",
                        "grades",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwz2000nl0v8g1h3f7es"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Grade criteria deleted successfully\"\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/settings/grades/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "settings",
                        "grades",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-grade-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Grade criteria not found\"\n}"
                }
              ]
            },
            {
              "name": "Get Psychomotor Skills",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/exam/settings/psychomotor",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "settings",
                    "psychomotor"
                  ]
                },
                "description": "Gets psychomotor skills."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/settings/psychomotor",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "settings",
                        "psychomotor"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Psychomotor skills retrieved successfully\",\n    \"data\": [\n        {\n            \"id\": \"clxkzjwz3000pl0v8g1h3f7eu\",\n            \"name\": \"Punctuality\",\n            \"description\": \"Checks if the student is always on time.\",\n            \"maxScore\": 5\n        }\n    ]\n}"
                },
                {
                  "name": "Error - No Psychomotor Skills Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/settings/psychomotor",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "settings",
                        "psychomotor"
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"No psychomotor skills found\"\n}"
                }
              ]
            },
            {
              "name": "Create Psychomotor Skill",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Neatness\",\n    \"description\": \"Checks if the student's work is neat.\",\n    \"maxScore\": 5\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/settings/psychomotor",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "settings",
                    "psychomotor"
                  ]
                },
                "description": "Creates a psychomotor skill. Requires admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Neatness\",\n    \"description\": \"Checks if the student's work is neat.\",\n    \"maxScore\": 5\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/settings/psychomotor",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "settings",
                        "psychomotor"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Psychomotor skill created successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz3000ql0v8g1h3f7ev\",\n        \"name\": \"Neatness\",\n        \"description\": \"Checks if the student's work is neat.\",\n        \"maxScore\": 5\n    }\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"\",\n    \"maxScore\": null\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/settings/psychomotor",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "settings",
                        "psychomotor"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Name is required\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Question Banks",
          "item": [
            {
              "name": "Create Question Bank",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Mathematics Question Bank\",\n    \"description\": \"A collection of mathematics questions.\",\n    \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/question-banks",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "question-banks"
                  ]
                },
                "description": "Creates a new question bank. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Mathematics Question Bank\",\n    \"description\": \"A collection of mathematics questions.\",\n    \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/question-banks",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "question-banks"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Question bank created successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz3000sl0v8g1h3f7ex\",\n        \"name\": \"Mathematics Question Bank\",\n        \"description\": \"A collection of mathematics questions.\",\n        \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\"\n    }\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"\",\n    \"subjectId\": \"\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/question-banks",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "question-banks"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Name is required\"\n}"
                }
              ]
            },
            {
              "name": "Get All Question Banks",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/exam/question-banks",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "question-banks"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "description": "Gets all question banks. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/question-banks",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "question-banks"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Question banks retrieved successfully\",\n    \"data\": {\n        \"totalItems\": 1,\n        \"totalPages\": 1,\n        \"currentPage\": 1,\n        \"prevPage\": null,\n        \"nextPage\": null,\n        \"itemPerPage\": 10,\n        \"data\": [\n            {\n                \"id\": \"clxkzjwz3000sl0v8g1h3f7ex\",\n                \"name\": \"Mathematics Question Bank\",\n                \"description\": \"A collection of mathematics questions.\",\n                \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\"\n            }\n        ]\n    }\n}"
                },
                {
                  "name": "Error - No Question Banks Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/question-banks",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "question-banks"
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"No question banks found\"\n}"
                }
              ]
            },
            {
              "name": "Get Question Bank by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/exam/question-banks/:id",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "question-banks",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwz3000sl0v8g1h3f7ex"
                    }
                  ]
                },
                "description": "Gets a single question bank by ID. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/question-banks/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "question-banks",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwz3000sl0v8g1h3f7ex"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Question bank retrieved successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz3000sl0v8g1h3f7ex\",\n        \"name\": \"Mathematics Question Bank\",\n        \"description\": \"A collection of mathematics questions.\",\n        \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\",\n        \"questions\": []\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/question-banks/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "question-banks",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-question-bank-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Question bank not found\"\n}"
                }
              ]
            },
            {
              "name": "Update Question Bank",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Mathematics Question Bank (Updated)\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/question-banks/:id",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "question-banks",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwz3000sl0v8g1h3f7ex"
                    }
                  ]
                },
                "description": "Updates a question bank by ID. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Mathematics Question Bank (Updated)\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/question-banks/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "question-banks",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwz3000sl0v8g1h3f7ex"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Question bank updated successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz3000sl0v8g1h3f7ex\",\n        \"name\": \"Mathematics Question Bank (Updated)\",\n        \"description\": \"A collection of mathematics questions.\",\n        \"subjectId\": \"clxkzjwyw0008l0v8g1h3f7ed\"\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Mathematics Question Bank (Updated)\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/question-banks/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "question-banks",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-question-bank-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Question bank not found\"\n}"
                }
              ]
            },
            {
              "name": "Delete Question Bank",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/exam/question-banks/:id",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "question-banks",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwz3000sl0v8g1h3f7ex"
                    }
                  ]
                },
                "description": "Deletes a question bank by ID. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/question-banks/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "question-banks",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwz3000sl0v8g1h3f7ex"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Question bank deleted successfully\"\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/question-banks/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "question-banks",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-question-bank-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Question bank not found\"\n}"
                }
              ]
            },
            {
              "name": "Add Questions to Bank",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"questions\": [\n        {\n            \"type\": \"MCQ\",\n            \"questionText\": \"What is 2 + 2?\",\n            \"options\": [\"3\", \"4\", \"5\"],\n            \"correctAnswer\": [1],\n            \"marks\": 5,\n            \"difficulty\": \"EASY\"\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/question-banks/:bankId/questions",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "question-banks",
                    ":bankId",
                    "questions"
                  ],
                  "variable": [
                    {
                      "key": "bankId",
                      "value": "clxkzjwz3000sl0v8g1h3f7ex"
                    }
                  ]
                },
                "description": "Adds a question to a bank. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"questions\": [\n        {\n            \"type\": \"MCQ\",\n            \"questionText\": \"What is 2 + 2?\",\n            \"options\": [\"3\", \"4\", \"5\"],\n            \"correctAnswer\": [1],\n            \"marks\": 5,\n            \"difficulty\": \"EASY\"\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/question-banks/:bankId/questions",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "question-banks",
                        ":bankId",
                        "questions"
                      ],
                      "variable": [
                        {
                          "key": "bankId",
                          "value": "clxkzjwz3000sl0v8g1h3f7ex"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Questions added to bank successfully\",\n    \"data\": {\n        \"count\": 1\n    }\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"questions\": [\n        {\n            \"type\": \"INVALID_TYPE\",\n            \"questionText\": \"\",\n            \"marks\": -5\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/question-banks/:bankId/questions",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "question-banks",
                        ":bankId",
                        "questions"
                      ],
                      "variable": [
                        {
                          "key": "bankId",
                          "value": "clxkzjwz3000sl0v8g1h3f7ex"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Invalid question type\"\n}"
                }
              ]
            },
            {
              "name": "Update Question",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"questionText\": \"What is 2 + 3?\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/question-banks/:bankId/questions/:questionId",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "question-banks",
                    ":bankId",
                    "questions",
                    ":questionId"
                  ],
                  "variable": [
                    {
                      "key": "bankId",
                      "value": "clxkzjwz3000sl0v8g1h3f7ex"
                    },
                    {
                      "key": "questionId",
                      "value": "clxkzjwz4000ul0v8g1h3f7ez"
                    }
                  ]
                },
                "description": "Updates a question. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"questionText\": \"What is 2 + 3?\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/question-banks/:bankId/questions/:questionId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "question-banks",
                        ":bankId",
                        "questions",
                        ":questionId"
                      ],
                      "variable": [
                        {
                          "key": "bankId",
                          "value": "clxkzjwz3000sl0v8g1h3f7ex"
                        },
                        {
                          "key": "questionId",
                          "value": "clxkzjwz4000ul0v8g1h3f7ez"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Question updated successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz4000ul0v8g1h3f7ez\",\n        \"type\": \"MCQ\",\n        \"questionText\": \"What is 2 + 3?\",\n        \"options\": [\n            \"3\",\n            \"4\",\n            \"5\"\n        ],\n        \"correctAnswer\": [\n            1\n        ],\n        \"marks\": 5,\n        \"difficulty\": \"EASY\"\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"questionText\": \"What is 2 + 3?\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/question-banks/:bankId/questions/:questionId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "question-banks",
                        ":bankId",
                        "questions",
                        ":questionId"
                      ],
                      "variable": [
                        {
                          "key": "bankId",
                          "value": "clxkzjwz3000sl0v8g1h3f7ex"
                        },
                        {
                          "key": "questionId",
                          "value": "non-existent-question-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Question not found\"\n}"
                }
              ]
            },
            {
              "name": "Delete Question",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/exam/question-banks/:bankId/questions/:questionId",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "question-banks",
                    ":bankId",
                    "questions",
                    ":questionId"
                  ],
                  "variable": [
                    {
                      "key": "bankId",
                      "value": "clxkzjwz3000sl0v8g1h3f7ex"
                    },
                    {
                      "key": "questionId",
                      "value": "clxkzjwz4000ul0v8g1h3f7ez"
                    }
                  ]
                },
                "description": "Deletes a question. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/question-banks/:bankId/questions/:questionId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "question-banks",
                        ":bankId",
                        "questions",
                        ":questionId"
                      ],
                      "variable": [
                        {
                          "key": "bankId",
                          "value": "clxkzjwz3000sl0v8g1h3f7ex"
                        },
                        {
                          "key": "questionId",
                          "value": "clxkzjwz4000ul0v8g1h3f7ez"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Question deleted successfully\"\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/question-banks/:bankId/questions/:questionId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "question-banks",
                        ":bankId",
                        "questions",
                        ":questionId"
                      ],
                      "variable": [
                        {
                          "key": "bankId",
                          "value": "clxkzjwz3000sl0v8g1h3f7ex"
                        },
                        {
                          "key": "questionId",
                          "value": "non-existent-question-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Question not found\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Results Management",
          "item": [
            {
              "name": "Add Manual Marks",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"examPaperId\": \"clxkzjwz3000tl0v8g1h3f7ey\",\n    \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n    \"totalScore\": 85,\n    \"remarks\": \"Good performance\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/results/manual-entry",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "results",
                    "manual-entry"
                  ]
                },
                "description": "Adds manual marks for paper-based tests. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"examPaperId\": \"clxkzjwz3000tl0v8g1h3f7ey\",\n    \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n    \"totalScore\": 85,\n    \"remarks\": \"Good performance\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/results/manual-entry",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "results",
                        "manual-entry"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Marks added successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz4000xl0v8g1h3f7f4\",\n        \"examPaperId\": \"clxkzjwz3000tl0v8g1h3f7ey\",\n        \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n        \"totalScore\": 85,\n        \"remarks\": \"Good performance\"\n    }\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"examPaperId\": \"\",\n    \"studentId\": \"\",\n    \"totalScore\": null\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/results/manual-entry",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "results",
                        "manual-entry"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Exam paper ID is required\"\n}"
                }
              ]
            },
            {
              "name": "Get Essay Responses for Grading",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/exam/results/essays-for-grading/:examPaperId",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "results",
                    "essays-for-grading",
                    ":examPaperId"
                  ],
                  "variable": [
                    {
                      "key": "examPaperId",
                      "value": "clxkzjwz3000tl0v8g1h3f7ey"
                    }
                  ]
                },
                "description": "Gets essay responses for grading. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/results/essays-for-grading/:examPaperId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "results",
                        "essays-for-grading",
                        ":examPaperId"
                      ],
                      "variable": [
                        {
                          "key": "examPaperId",
                          "value": "clxkzjwz3000tl0v8g1h3f7ey"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Essay responses retrieved successfully\",\n    \"data\": [\n        {\n            \"id\": \"clxkzjwz4000yl0v8g1h3f7f5\",\n            \"studentAnswer\": \"This is a sample essay response.\",\n            \"question\": {\n                \"questionText\": \"Explain the concept of photosynthesis.\"\n            }\n        }\n    ]\n}"
                },
                {
                  "name": "Error - No Essays Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/results/essays-for-grading/:examPaperId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "results",
                        "essays-for-grading",
                        ":examPaperId"
                      ],
                      "variable": [
                        {
                          "key": "examPaperId",
                          "value": "non-existent-paper-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"No essay responses found for this exam paper\"\n}"
                }
              ]
            },
            {
              "name": "Grade Essay Response",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"marksAwarded\": 8,\n    \"feedback\": \"Well written.\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/results/grade-essay/:responseId",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "results",
                    "grade-essay",
                    ":responseId"
                  ],
                  "variable": [
                    {
                      "key": "responseId",
                      "value": "clxkzjwz4000yl0v8g1h3f7f5"
                    }
                  ]
                },
                "description": "Grades an essay response. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"marksAwarded\": 8,\n    \"feedback\": \"Well written.\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/results/grade-essay/:responseId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "results",
                        "grade-essay",
                        ":responseId"
                      ],
                      "variable": [
                        {
                          "key": "responseId",
                          "value": "clxkzjwz4000yl0v8g1h3f7f5"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Essay response graded successfully\"\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"marksAwarded\": 8,\n    \"feedback\": \"Well written.\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/results/grade-essay/:responseId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "results",
                        "grade-essay",
                        ":responseId"
                      ],
                      "variable": [
                        {
                          "key": "responseId",
                          "value": "non-existent-response-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Essay response not found\"\n}"
                }
              ]
            },
            {
              "name": "Finalize CBT Results",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/exam/results/finalize-cbt/:examPaperId",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "results",
                    "finalize-cbt",
                    ":examPaperId"
                  ],
                  "variable": [
                    {
                      "key": "examPaperId",
                      "value": "clxkzjwz3000tl0v8g1h3f7ey"
                    }
                  ]
                },
                "description": "Finalizes CBT results after grading. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/results/finalize-cbt/:examPaperId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "results",
                        "finalize-cbt",
                        ":examPaperId"
                      ],
                      "variable": [
                        {
                          "key": "examPaperId",
                          "value": "clxkzjwz3000tl0v8g1h3f7ey"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"CBT results finalized successfully\"\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/results/finalize-cbt/:examPaperId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "results",
                        "finalize-cbt",
                        ":examPaperId"
                      ],
                      "variable": [
                        {
                          "key": "examPaperId",
                          "value": "non-existent-paper-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Exam paper not found\"\n}"
                }
              ]
            },
            {
              "name": "Publish Results",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"publish\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/results/publish/:examPaperId",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "results",
                    "publish",
                    ":examPaperId"
                  ],
                  "variable": [
                    {
                      "key": "examPaperId",
                      "value": "clxkzjwz3000tl0v8g1h3f7ey"
                    }
                  ]
                },
                "description": "Publishes or unpublishes results. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"publish\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/results/publish/:examPaperId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "results",
                        "publish",
                        ":examPaperId"
                      ],
                      "variable": [
                        {
                          "key": "examPaperId",
                          "value": "clxkzjwz3000tl0v8g1h3f7ey"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Results published successfully\"\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"publish\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/results/publish/:examPaperId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "results",
                        "publish",
                        ":examPaperId"
                      ],
                      "variable": [
                        {
                          "key": "examPaperId",
                          "value": "non-existent-paper-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Exam paper not found\"\n}"
                }
              ]
            },
            {
              "name": "Unpublish Results",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"publish\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/results/publish/:examPaperId",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "results",
                    "publish",
                    ":examPaperId"
                  ],
                  "variable": [
                    {
                      "key": "examPaperId",
                      "value": "clxkzjwz3000tl0v8g1h3f7ey"
                    }
                  ]
                },
                "description": "Unpublishes results. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"publish\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/results/publish/:examPaperId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "results",
                        "publish",
                        ":examPaperId"
                      ],
                      "variable": [
                        {
                          "key": "examPaperId",
                          "value": "clxkzjwz3000tl0v8g1h3f7ey"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Results unpublished successfully\"\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"publish\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/results/publish/:examPaperId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "results",
                        "publish",
                        ":examPaperId"
                      ],
                      "variable": [
                        {
                          "key": "examPaperId",
                          "value": "non-existent-paper-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Exam paper not found\"\n}"
                }
              ]
            },
            {
              "name": "Add Term Remarks",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n    \"termId\": \"clxkzjwxk000al0v8g1h3f7ef\",\n    \"sessionId\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n    \"classId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n    \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n    \"teacherRemarks\": \"Excellent progress this term.\",\n    \"principalRemarks\": \"Keep up the great work!\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/results/term-remarks",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "results",
                    "term-remarks"
                  ]
                },
                "description": "Adds term-level remarks for a student. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n    \"termId\": \"clxkzjwxk000al0v8g1h3f7ef\",\n    \"sessionId\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n    \"classId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n    \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n    \"teacherRemarks\": \"Excellent progress this term.\",\n    \"principalRemarks\": \"Keep up the great work!\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/results/term-remarks",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "results",
                        "term-remarks"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Term remarks added successfully\"\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"studentId\": \"\",\n    \"termId\": \"\",\n    \"sessionId\": \"\",\n    \"classId\": \"\",\n    \"sectionId\": \"\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/results/term-remarks",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "results",
                        "term-remarks"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Student ID is required\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Reports",
          "item": [
            {
              "name": "Generate Student Term Report",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/exam/reports/student-term-report?studentId=clxkzjwz0000al0v8g1h3f7ef&termId=clxkzjwxk000al0v8g1h3f7ef&sessionId=clxkzjwxk0009l0v8g1h3f7ee",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "reports",
                    "student-term-report"
                  ],
                  "query": [
                    {
                      "key": "studentId",
                      "value": "clxkzjwz0000al0v8g1h3f7ef"
                    },
                    {
                      "key": "termId",
                      "value": "clxkzjwxk000al0v8g1h3f7ef"
                    },
                    {
                      "key": "sessionId",
                      "value": "clxkzjwxk0009l0v8g1h3f7ee"
                    },
                    {
                      "key": "format",
                      "value": "pdf",
                      "disabled": true
                    }
                  ]
                },
                "description": "Generates a student term report."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/reports/student-term-report?studentId=clxkzjwz0000al0v8g1h3f7ef&termId=clxkzjwxk000al0v8g1h3f7ef&sessionId=clxkzjwxk0009l0v8g1h3f7ee",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "reports",
                        "student-term-report"
                      ],
                      "query": [
                        {
                          "key": "studentId",
                          "value": "clxkzjwz0000al0v8g1h3f7ef"
                        },
                        {
                          "key": "termId",
                          "value": "clxkzjwxk000al0v8g1h3f7ef"
                        },
                        {
                          "key": "sessionId",
                          "value": "clxkzjwxk0009l0v8g1h3f7ee"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Student term report generated successfully\",\n    \"data\": {\n        \"student\": {\n            \"name\": \"New Student 2\"\n        },\n        \"results\": [\n            {\n                \"subject\": \"Mathematics\",\n                \"score\": 85\n            }\n        ],\n        \"psychomotor\": [\n            {\n                \"skill\": \"Punctuality\",\n                \"score\": 4\n            }\n        ],\n        \"remarks\": {\n            \"teacher\": \"Excellent progress this term.\",\n            \"principal\": \"Keep up the great work!\"\n        }\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/exam/reports/student-term-report?studentId=non-existent-student-id&termId=clxkzjwxk000al0v8g1h3f7ef&sessionId=clxkzjwxk0009l0v8g1h3f7ee",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "reports",
                        "student-term-report"
                      ],
                      "query": [
                        {
                          "key": "studentId",
                          "value": "non-existent-student-id"
                        },
                        {
                          "key": "termId",
                          "value": "clxkzjwxk000al0v8g1h3f7ef"
                        },
                        {
                          "key": "sessionId",
                          "value": "clxkzjwxk0009l0v8g1h3f7ee"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Student not found\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Psychomotor Assessment",
          "item": [
            {
              "name": "Save Psychomotor Assessments",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"assessments\": [\n        {\n            \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n            \"termId\": \"clxkzjwxk000al0v8g1h3f7ef\",\n            \"sessionId\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n            \"classId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n            \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n            \"skillAssessments\": [\n                {\n                    \"skillId\": \"clxkzjwz3000pl0v8g1h3f7eu\",\n                    \"score\": 4\n                },\n                {\n                    \"skillId\": \"clxkzjwz3000ql0v8g1h3f7ev\",\n                    \"score\": 5\n                }\n            ]\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/exam/psychomotor/assessments",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "exam",
                    "psychomotor",
                    "assessments"
                  ]
                },
                "description": "Saves psychomotor assessments. Requires teacher role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"assessments\": [\n        {\n            \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n            \"termId\": \"clxkzjwxk000al0v8g1h3f7ef\",\n            \"sessionId\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n            \"classId\": \"clxkzjwyl0004l0v8g1h3f7e9\",\n            \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n            \"skillAssessments\": [\n                {\n                    \"skillId\": \"clxkzjwz3000pl0v8g1h3f7eu\",\n                    \"score\": 4\n                },\n                {\n                    \"skillId\": \"clxkzjwz3000ql0v8g1h3f7ev\",\n                    \"score\": 5\n                }\n            ]\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/psychomotor/assessments",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "psychomotor",
                        "assessments"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Psychomotor assessments saved successfully\"\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"assessments\": [\n        {\n            \"studentId\": \"\",\n            \"termId\": \"\",\n            \"sessionId\": \"\",\n            \"classId\": \"\",\n            \"sectionId\": \"\",\n            \"skillAssessments\": []\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/exam/psychomotor/assessments",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "exam",
                        "psychomotor",
                        "assessments"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Student ID is required\"\n}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Account Management",
      "item": [
        {
          "name": "Reports",
          "item": [
            {
              "name": "Financial Overview",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/accounting/reports/financial-overview/:schoolId?startDate=2023-01-01&endDate=2023-12-31",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "reports",
                    "financial-overview",
                    ":schoolId"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "2023-01-01"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ],
                  "variable": [
                    {
                      "key": "schoolId",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7"
                    }
                  ]
                },
                "description": "Gets a financial overview. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/reports/financial-overview/:schoolId?startDate=2023-01-01&endDate=2023-12-31",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "reports",
                        "financial-overview",
                        ":schoolId"
                      ],
                      "query": [
                        {
                          "key": "startDate",
                          "value": "2023-01-01"
                        },
                        {
                          "key": "endDate",
                          "value": "2023-12-31"
                        }
                      ],
                      "variable": [
                        {
                          "key": "schoolId",
                          "value": "clxkzjwxk0002l0v8g1h3f7e7"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Financial overview retrieved successfully\",\n    \"data\": {\n        \"totalRevenue\": 25000,\n        \"totalExpenses\": 5000,\n        \"netProfit\": 20000,\n        \"revenueByFeeCategory\": [\n            {\n                \"feeCategory\": \"Tuition Fee\",\n                \"total\": 25000\n            }\n        ],\n        \"expensesByCategory\": [\n            {\n                \"category\": \"SUPPLIES\",\n                \"total\": 5000\n            }\n        ]\n    }\n}"
                }
              ]
            },
            {
              "name": "Student Financial Report",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/accounting/reports/student/:studentId/:schoolId",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "reports",
                    "student",
                    ":studentId",
                    ":schoolId"
                  ],
                  "variable": [
                    {
                      "key": "studentId",
                      "value": "clxkzjwz0000al0v8g1h3f7ef"
                    },
                    {
                      "key": "schoolId",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7"
                    }
                  ]
                },
                "description": "Gets a student financial report. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/reports/student/:studentId/:schoolId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "reports",
                        "student",
                        ":studentId",
                        ":schoolId"
                      ],
                      "variable": [
                        {
                          "key": "studentId",
                          "value": "clxkzjwz0000al0v8g1h3f7ef"
                        },
                        {
                          "key": "schoolId",
                          "value": "clxkzjwxk0002l0v8g1h3f7e7"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Student financial report retrieved successfully\",\n    \"data\": {\n        \"student\": {\n            \"id\": \"clxkzjwz0000al0v8g1h3f7ef\",\n            \"name\": \"New Student 2\"\n        },\n        \"invoices\": [\n            {\n                \"id\": \"clxkzjwz1000hl0v8g1h3f7em\",\n                \"title\": \"Term 1 Fees (Updated)\",\n                \"totalAmount\": 50000,\n                \"paidAmount\": 25000,\n                \"balance\": 25000,\n                \"status\": \"PARTIALLY_PAID\"\n            }\n        ],\n        \"payments\": [\n            {\n                \"id\": \"clxkzjwz2000jl0v8g1h3f7eo\",\n                \"amount\": 25000,\n                \"paymentMethod\": \"CASH\",\n                \"status\": \"COMPLETED\"\n            }\n        ]\n    }\n}"
                }
              ]
            },
            {
              "name": "Payment Report",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/accounting/reports/payments/:schoolId?startDate=2023-01-01&endDate=2023-12-31",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "reports",
                    "payments",
                    ":schoolId"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "2023-01-01"
                    },
                    {
                      "key": "endDate",
                      "value": "2023-12-31"
                    }
                  ],
                  "variable": [
                    {
                      "key": "schoolId",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7"
                    }
                  ]
                },
                "description": "Gets a payment report. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/reports/payments/:schoolId?startDate=2023-01-01&endDate=2023-12-31",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "reports",
                        "payments",
                        ":schoolId"
                      ],
                      "query": [
                        {
                          "key": "startDate",
                          "value": "2023-01-01"
                        },
                        {
                          "key": "endDate",
                          "value": "2023-12-31"
                        }
                      ],
                      "variable": [
                        {
                          "key": "schoolId",
                          "value": "clxkzjwxk0002l0v8g1h3f7e7"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Payment report retrieved successfully\",\n    \"data\": {\n        \"totalPayments\": 1,\n        \"totalAmount\": 25000,\n        \"paymentsByMethod\": [\n            {\n                \"paymentMethod\": \"CASH\",\n                \"total\": 25000\n            }\n        ]\n    }\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Fee Categories",
          "item": [
            {
              "name": "Create Fee Category",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Tuition Fee\",\n    \"description\": \"Monthly tuition fee for students\",\n    \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\"\n}"
                },
                "url": {
                  "raw": "{{auth_url}}/api/accounting/fee-categories",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "fee-categories"
                  ]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"sectionId\": \"clxkzjwyl0005l0v8g1h3f7ea\",\n    \"date\": \"2023-10-01\",\n    \"records\": [\n        {\n            \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n            \"status\": \"PRESENT\"\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/fee-categories",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "fee-categories"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Fee category created successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz1000gl0v8g1h3f7el\",\n        \"name\": \"Tuition Fee\",\n        \"description\": \"Monthly tuition fee for students\"\n    }\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"\",\n    \"schoolId\": \"\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/fee-categories",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "fee-categories"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Name is required\"\n}"
                }
              ]
            },
            {
              "name": "Get Fee Categories",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/accounting/fee-categories/:schoolId",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "fee-categories",
                    ":schoolId"
                  ],
                  "variable": [
                    {
                      "key": "schoolId",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7"
                    }
                  ]
                },
                "description": "Gets fee categories by school. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/fee-categories/:schoolId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "fee-categories",
                        ":schoolId"
                      ],
                      "variable": [
                        {
                          "key": "schoolId",
                          "value": "clxkzjwxk0002l0v8g1h3f7e7"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Fee categories retrieved successfully\",\n    \"data\": {\n        \"totalItems\": 1,\n        \"totalPages\": 1,\n        \"currentPage\": 1,\n        \"prevPage\": null,\n        \"nextPage\": null,\n        \"itemPerPage\": 10,\n        \"data\": [\n            {\n                \"id\": \"clxkzjwz1000gl0v8g1h3f7el\",\n                \"name\": \"Tuition Fee\",\n                \"description\": \"Monthly tuition fee\"\n            }\n        ]\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/fee-categories/:schoolId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "fee-categories",
                        ":schoolId"
                      ],
                      "variable": [
                        {
                          "key": "schoolId",
                          "value": "non-existent-school-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"No fee categories found for this school\"\n}"
                }
              ]
            },
            {
              "name": "Get Fee Category by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/accounting/fee-categories/:schoolId/:id",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "fee-categories",
                    ":schoolId",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "schoolId",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7"
                    },
                    {
                      "key": "id",
                      "value": "clxkzjwz1000gl0v8g1h3f7el"
                    }
                  ]
                },
                "description": "Gets a fee category by ID. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/fee-categories/:schoolId/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "fee-categories",
                        ":schoolId",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "schoolId",
                          "value": "clxkzjwxk0002l0v8g1h3f7e7"
                        },
                        {
                          "key": "id",
                          "value": "clxkzjwz1000gl0v8g1h3f7el"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Fee category retrieved successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz1000gl0v8g1h3f7el\",\n        \"name\": \"Tuition Fee\",\n        \"description\": \"Monthly tuition fee\"\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/fee-categories/:schoolId/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "fee-categories",
                        ":schoolId",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "schoolId",
                          "value": "clxkzjwxk0002l0v8g1h3f7e7"
                        },
                        {
                          "key": "id",
                          "value": "non-existent-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Fee category not found\"\n}"
                }
              ]
            },
            {
              "name": "Update Fee Category",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Updated Tuition Fee\",\n    \"description\": \"Updated monthly tuition fee\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/accounting/fee-categories/:id",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "fee-categories",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwz1000gl0v8g1h3f7el"
                    }
                  ]
                },
                "description": "Updates a fee category. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Updated Tuition Fee\",\n    \"description\": \"Updated monthly tuition fee\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/fee-categories/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "fee-categories",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwz1000gl0v8g1h3f7el"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Fee category updated successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz1000gl0v8g1h3f7el\",\n        \"name\": \"Updated Tuition Fee\",\n        \"description\": \"Updated monthly tuition fee\"\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Updated Tuition Fee\",\n    \"description\": \"Updated monthly tuition fee\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/fee-categories/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "fee-categories",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Fee category not found\"\n}"
                }
              ]
            },
            {
              "name": "Delete Fee Category",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/accounting/fee-categories/:id",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "fee-categories",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwz1000gl0v8g1h3f7el"
                    }
                  ]
                },
                "description": "Deletes a fee category. Requires admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/fee-categories/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "fee-categories",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwz1000gl0v8g1h3f7el"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Fee category deleted successfully\"\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/fee-categories/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "fee-categories",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Fee category not found\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Invoices",
          "item": [
            {
              "name": "Create and Assign Invoice",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Term 1 Fees\",\n    \"description\": \"First term school fees\",\n    \"dueDate\": \"2023-10-31T23:59:59.000Z\",\n    \"termId\": \"clxkzjwxk000al0v8g1h3f7ef\",\n    \"sessionId\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n    \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n    \"allowPartialPayment\": true,\n    \"items\": [\n        {\n            \"feeCategoryId\": \"clxkzjwz1000gl0v8g1h3f7el\",\n            \"amount\": 50000\n        }\n    ],\n    \"assignmentType\": \"SINGLE_STUDENT\",\n    \"studentIds\": [\"clxkzjwz0000al0v8g1h3f7ef\"]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/accounting/invoices/create-and-assign",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "invoices",
                    "create-and-assign"
                  ]
                },
                "description": "Creates and assigns an invoice. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"title\": \"Term 1 Fees\",\n    \"description\": \"First term school fees\",\n    \"dueDate\": \"2023-10-31T23:59:59.000Z\",\n    \"termId\": \"clxkzjwxk000al0v8g1h3f7ef\",\n    \"sessionId\": \"clxkzjwxk0009l0v8g1h3f7ee\",\n    \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\",\n    \"allowPartialPayment\": true,\n    \"items\": [\n        {\n            \"feeCategoryId\": \"clxkzjwz1000gl0v8g1h3f7el\",\n            \"amount\": 50000\n        }\n    ],\n    \"assignmentType\": \"SINGLE_STUDENT\",\n    \"studentIds\": [\"clxkzjwz0000al0v8g1h3f7ef\"]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/invoices/create-and-assign",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "invoices",
                        "create-and-assign"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Invoice created and assigned successfully\",\n    \"data\": {\n        \"count\": 1\n    }\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"title\": \"\",\n    \"schoolId\": \"\",\n    \"items\": []\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/invoices/create-and-assign",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "invoices",
                        "create-and-assign"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Title is required\"\n}"
                }
              ]
            },
            {
              "name": "Get Invoices",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/accounting/invoices?status=DRAFT",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "invoices"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "DRAFT"
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "description": "Gets invoices. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/invoices?status=DRAFT",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "invoices"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "DRAFT"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Invoices retrieved successfully\",\n    \"data\": {\n        \"totalItems\": 1,\n        \"totalPages\": 1,\n        \"currentPage\": 1,\n        \"prevPage\": null,\n        \"nextPage\": null,\n        \"itemPerPage\": 10,\n        \"data\": [\n            {\n                \"id\": \"clxkzjwz1000hl0v8g1h3f7em\",\n                \"title\": \"Term 1 Fees\",\n                \"description\": \"First term school fees\",\n                \"dueDate\": \"2023-10-31T23:59:59.000Z\",\n                \"status\": \"DRAFT\",\n                \"totalAmount\": 50000,\n                \"paidAmount\": 0,\n                \"balance\": 50000\n            }\n        ]\n    }\n}"
                },
                {
                  "name": "Error - No Invoices Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/invoices?status=PAID",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "invoices"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "PAID"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"No invoices found with the specified status\"\n}"
                }
              ]
            },
            {
              "name": "Get Invoice by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/accounting/invoices/:id",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "invoices",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwz1000hl0v8g1h3f7em"
                    }
                  ]
                },
                "description": "Gets an invoice by ID. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/invoices/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "invoices",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwz1000hl0v8g1h3f7em"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Invoice retrieved successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz1000hl0v8g1h3f7em\",\n        \"title\": \"Term 1 Fees\",\n        \"description\": \"First term school fees\",\n        \"dueDate\": \"2023-10-31T23:59:59.000Z\",\n        \"status\": \"DRAFT\",\n        \"totalAmount\": 50000,\n        \"paidAmount\": 0,\n        \"balance\": 50000,\n        \"items\": [\n            {\n                \"id\": \"clxkzjwz1000il0v8g1h3f7en\",\n                \"description\": \"Tuition Fee\",\n                \"amount\": 50000\n            }\n        ]\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/invoices/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "invoices",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Invoice not found\"\n}"
                }
              ]
            },
            {
              "name": "Update Invoice",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Term 1 Fees (Updated)\",\n    \"status\": \"SENT\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/accounting/invoices/:id",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "invoices",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwz1000hl0v8g1h3f7em"
                    }
                  ]
                },
                "description": "Updates an invoice. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"title\": \"Term 1 Fees (Updated)\",\n    \"status\": \"SENT\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/invoices/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "invoices",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwz1000hl0v8g1h3f7em"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Invoice updated successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz1000hl0v8g1h3f7em\",\n        \"title\": \"Term 1 Fees (Updated)\",\n        \"description\": \"First term school fees\",\n        \"dueDate\": \"2023-10-31T23:59:59.000Z\",\n        \"status\": \"SENT\",\n        \"totalAmount\": 50000,\n        \"paidAmount\": 0,\n        \"balance\": 50000\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"title\": \"Term 1 Fees (Updated)\",\n    \"status\": \"SENT\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/invoices/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "invoices",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Invoice not found\"\n}"
                }
              ]
            },
            {
              "name": "Delete Invoice",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/accounting/invoices/:id",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "invoices",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwz1000hl0v8g1h3f7em"
                    }
                  ]
                },
                "description": "Deletes an invoice. Requires admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/invoices/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "invoices",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwz1000hl0v8g1h3f7em"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Invoice deleted successfully\"\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/invoices/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "invoices",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Invoice not found\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Payments",
          "item": [
            {
              "name": "Create Payment",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"invoiceId\": \"clxkzjwz1000hl0v8g1h3f7em\",\n    \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n    \"amount\": 25000,\n    \"paymentMethod\": \"CASH\",\n    \"transactionRef\": \"CASH-001\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/accounting/payments",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "payments"
                  ]
                },
                "description": "Creates a payment. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"invoiceId\": \"clxkzjwz1000hl0v8g1h3f7em\",\n    \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n    \"amount\": 25000,\n    \"paymentMethod\": \"CASH\",\n    \"transactionRef\": \"CASH-001\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/payments",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "payments"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Payment created successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz2000jl0v8g1h3f7eo\",\n        \"invoiceId\": \"clxkzjwz1000hl0v8g1h3f7em\",\n        \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n        \"amount\": 25000,\n        \"paymentMethod\": \"CASH\",\n        \"transactionRef\": \"CASH-001\",\n        \"status\": \"COMPLETED\"\n    }\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"invoiceId\": \"\",\n    \"studentId\": \"\",\n    \"amount\": null\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/payments",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "payments"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Invoice ID is required\"\n}"
                }
              ]
            },
            {
              "name": "Get Payments",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/accounting/payments?status=COMPLETED",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "payments"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "COMPLETED"
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "description": "Gets payments. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/payments?status=COMPLETED",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "payments"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "COMPLETED"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Payments retrieved successfully\",\n    \"data\": {\n        \"totalItems\": 1,\n        \"totalPages\": 1,\n        \"currentPage\": 1,\n        \"prevPage\": null,\n        \"nextPage\": null,\n        \"itemPerPage\": 10,\n        \"data\": [\n            {\n                \"id\": \"clxkzjwz2000jl0v8g1h3f7eo\",\n                \"invoiceId\": \"clxkzjwz1000hl0v8g1h3f7em\",\n                \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n                \"amount\": 25000,\n                \"paymentMethod\": \"CASH\",\n                \"transactionRef\": \"CASH-001\",\n                \"status\": \"COMPLETED\"\n            }\n        ]\n    }\n}"
                },
                {
                  "name": "Error - No Payments Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/payments?status=PENDING",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "payments"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "PENDING"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"No payments found with the specified status\"\n}"
                }
              ]
            },
            {
              "name": "Get Payment by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/accounting/payments/:id",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "payments",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwz2000jl0v8g1h3f7eo"
                    }
                  ]
                },
                "description": "Gets a payment by ID. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/payments/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "payments",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwz2000jl0v8g1h3f7eo"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Payment retrieved successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz2000jl0v8g1h3f7eo\",\n        \"invoiceId\": \"clxkzjwz1000hl0v8g1h3f7em\",\n        \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n        \"amount\": 25000,\n        \"paymentMethod\": \"CASH\",\n        \"transactionRef\": \"CASH-001\",\n        \"status\": \"COMPLETED\"\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/payments/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "payments",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Payment not found\"\n}"
                }
              ]
            },
            {
              "name": "Update Payment Status",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"status\": \"COMPLETED\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/accounting/payments/:id/status",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "payments",
                    ":id",
                    "status"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwz2000jl0v8g1h3f7eo"
                    }
                  ]
                },
                "description": "Updates the status of a payment. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"status\": \"COMPLETED\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/payments/:id/status",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "payments",
                        ":id",
                        "status"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwz2000jl0v8g1h3f7eo"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Payment status updated successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz2000jl0v8g1h3f7eo\",\n        \"invoiceId\": \"clxkzjwz1000hl0v8g1h3f7em\",\n        \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\",\n        \"amount\": 25000,\n        \"paymentMethod\": \"CASH\",\n        \"transactionRef\": \"CASH-001\",\n        \"status\": \"COMPLETED\"\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"status\": \"COMPLETED\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/payments/:id/status",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "payments",
                        ":id",
                        "status"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Payment not found\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Expenses",
          "item": [
            {
              "name": "Create Expense",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Office Supplies\",\n    \"description\": \"Purchase of office supplies\",\n    \"amount\": 5000,\n    \"category\": \"SUPPLIES\",\n    \"expenseDate\": \"2023-10-01T10:00:00Z\",\n    \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/accounting/expenses",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "expenses"
                  ]
                },
                "description": "Creates an expense. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"title\": \"Office Supplies\",\n    \"description\": \"Purchase of office supplies\",\n    \"amount\": 5000,\n    \"category\": \"SUPPLIES\",\n    \"expenseDate\": \"2023-10-01T10:00:00Z\",\n    \"schoolId\": \"clxkzjwxk0002l0v8g1h3f7e7\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/expenses",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "expenses"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Expense created successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz2000kl0v8g1h3f7ep\",\n        \"title\": \"Office Supplies\",\n        \"description\": \"Purchase of office supplies\",\n        \"amount\": 5000,\n        \"category\": \"SUPPLIES\",\n        \"expenseDate\": \"2023-10-01T10:00:00.000Z\"\n    }\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"title\": \"\",\n    \"amount\": null,\n    \"schoolId\": \"\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/expenses",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "expenses"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Title is required\"\n}"
                }
              ]
            },
            {
              "name": "Get Expenses",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/accounting/expenses?schoolId=clxkzjwxk0002l0v8g1h3f7e7",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "expenses"
                  ],
                  "query": [
                    {
                      "key": "schoolId",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7"
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "description": "Gets expenses. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/expenses?schoolId=clxkzjwxk0002l0v8g1h3f7e7",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "expenses"
                      ],
                      "query": [
                        {
                          "key": "schoolId",
                          "value": "clxkzjwxk0002l0v8g1h3f7e7"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Expenses retrieved successfully\",\n    \"data\": {\n        \"totalItems\": 1,\n        \"totalPages\": 1,\n        \"currentPage\": 1,\n        \"prevPage\": null,\n        \"nextPage\": null,\n        \"itemPerPage\": 10,\n        \"data\": [\n            {\n                \"id\": \"clxkzjwz2000kl0v8g1h3f7ep\",\n                \"title\": \"Office Supplies\",\n                \"description\": \"Purchase of office supplies\",\n                \"amount\": 5000,\n                \"category\": \"SUPPLIES\",\n                \"expenseDate\": \"2023-10-01T10:00:00.000Z\"\n            }\n        ]\n    }\n}"
                },
                {
                  "name": "Error - No Expenses Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/expenses?schoolId=non-existent-school-id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "expenses"
                      ],
                      "query": [
                        {
                          "key": "schoolId",
                          "value": "non-existent-school-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"No expenses found for this school\"\n}"
                }
              ]
            },
            {
              "name": "Get Expense by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/accounting/expenses/:id",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "expenses",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "clxkzjwz2000kl0v8g1h3f7ep"
                    }
                  ]
                },
                "description": "Gets an expense by ID. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/expenses/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "expenses",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "clxkzjwz2000kl0v8g1h3f7ep"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Expense retrieved successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz2000kl0v8g1h3f7ep\",\n        \"title\": \"Office Supplies\",\n        \"description\": \"Purchase of office supplies\",\n        \"amount\": 5000,\n        \"category\": \"SUPPLIES\",\n        \"expenseDate\": \"2023-10-01T10:00:00.000Z\"\n    }\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/expenses/:id",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "expenses",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "non-existent-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Expense not found\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Payment Gateways",
          "item": [
            {
              "name": "Create Payment Gateway",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Paystack\",\n    \"provider\": \"PAYSTACK\",\n    \"config\": {\n        \"publicKey\": \"pk_test_...\",\n        \"secretKey\": \"sk_test_...\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/accounting/payment-gateways/:schoolId",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "payment-gateways",
                    ":schoolId"
                  ],
                  "variable": [
                    {
                      "key": "schoolId",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7"
                    }
                  ]
                },
                "description": "Creates a payment gateway. Requires admin role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Paystack\",\n    \"provider\": \"PAYSTACK\",\n    \"config\": {\n        \"publicKey\": \"pk_test_...\",\n        \"secretKey\": \"sk_test_...\"\n    }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/payment-gateways/:schoolId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "payment-gateways",
                        ":schoolId"
                      ],
                      "variable": [
                        {
                          "key": "schoolId",
                          "value": "clxkzjwxk0002l0v8g1h3f7e7"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Payment gateway created successfully\",\n    \"data\": {\n        \"id\": \"clxkzjwz2000ll0v8g1h3f7eq\",\n        \"name\": \"Paystack\",\n        \"provider\": \"PAYSTACK\",\n        \"isActive\": true\n    }\n}"
                },
                {
                  "name": "Error - Invalid Input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"\",\n    \"provider\": \"\",\n    \"config\": {}\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/payment-gateways/:schoolId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "payment-gateways",
                        ":schoolId"
                      ],
                      "variable": [
                        {
                          "key": "schoolId",
                          "value": "clxkzjwxk0002l0v8g1h3f7e7"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Name is required\"\n}"
                }
              ]
            },
            {
              "name": "Get Payment Gateways",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{auth_url}}/api/accounting/payment-gateways/:schoolId",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "payment-gateways",
                    ":schoolId"
                  ],
                  "variable": [
                    {
                      "key": "schoolId",
                      "value": "clxkzjwxk0002l0v8g1h3f7e7"
                    }
                  ]
                },
                "description": "Gets payment gateways. Requires finance role."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/payment-gateways/:schoolId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "payment-gateways",
                        ":schoolId"
                      ],
                      "variable": [
                        {
                          "key": "schoolId",
                          "value": "clxkzjwxk0002l0v8g1h3f7e7"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Payment gateways retrieved successfully\",\n    \"data\": [\n        {\n            \"id\": \"clxkzjwz2000ll0v8g1h3f7eq\",\n            \"name\": \"Paystack\",\n            \"provider\": \"PAYSTACK\",\n            \"isActive\": true\n        }\n    ]\n}"
                },
                {
                  "name": "Error - Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/payment-gateways/:schoolId",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "payment-gateways",
                        ":schoolId"
                      ],
                      "variable": [
                        {
                          "key": "schoolId",
                          "value": "non-existent-school-id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"No payment gateways found for this school\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Webhooks",
          "item": [
            {
              "name": "Payment Webhook",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"event\": \"charge.success\",\n    \"data\": {\n        \"reference\": \"T123456789\",\n        \"amount\": 5000000,\n        \"status\": \"success\",\n        \"customer\": {\n            \"email\": \"customer@example.com\"\n        },\n        \"metadata\": {\n            \"invoiceId\": \"clxkzjwz1000hl0v8g1h3f7em\",\n            \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\"\n        }\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{auth_url}}/api/accounting/webhooks/paystack",
                  "host": [
                    "{{auth_url}}"
                  ],
                  "path": [
                    "api",
                    "accounting",
                    "webhooks",
                    "paystack"
                  ]
                },
                "description": "Handles payment webhooks from providers like Paystack."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"event\": \"charge.success\",\n    \"data\": {\n        \"reference\": \"T123456789\",\n        \"amount\": 5000000,\n        \"status\": \"success\",\n        \"customer\": {\n            \"email\": \"customer@example.com\"\n        },\n        \"metadata\": {\n            \"invoiceId\": \"clxkzjwz1000hl0v8g1h3f7em\",\n            \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\"\n        }\n    }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/webhooks/paystack",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "webhooks",
                        "paystack"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": true,\n    \"message\": \"Webhook received\"\n}"
                },
                {
                  "name": "Error - Invalid Signature",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "x-paystack-signature",
                        "value": "invalid-signature"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"event\": \"charge.success\",\n    \"data\": {\n        \"reference\": \"T123456789\",\n        \"amount\": 5000000,\n        \"status\": \"success\",\n        \"customer\": {\n            \"email\": \"customer@example.com\"\n        },\n        \"metadata\": {\n            \"invoiceId\": \"clxkzjwz1000hl0v8g1h3f7em\",\n            \"studentId\": \"clxkzjwz0000al0v8g1h3f7ef\"\n        }\n    }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{auth_url}}/api/accounting/webhooks/paystack",
                      "host": [
                        "{{auth_url}}"
                      ],
                      "path": [
                        "api",
                        "accounting",
                        "webhooks",
                        "paystack"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"success\": false,\n    \"message\": \"Invalid signature\"\n}"
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "id",
      "value": "1"
    },
    {
      "key": "base_url",
      "value": ""
    }
  ]
}
